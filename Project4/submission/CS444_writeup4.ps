%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_writeup4.dvi
%%CreationDate: Thu Jun  8 13:53:49 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_writeup4.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.06.08:1353
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 81 /Q put
dup 83 /S put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2E03218F
D1FBD73FA776E257C13AE8E592F7167AC62B878AFE7AEC0242B2455B992D8A10
0B6F1992260390F81DE3B7DE02D30CFA32BD0A27DEC6CBFA9822ABC18495D634
054B56E8B623BF4B7552EF627BAFDAB1F43B7A40B78DAC79E59ACCD26F85E6AF
44D29FEAD450AD7CA3C9A74492BA56477B97D7C121B787286D154D35EA47C20F
227DB7A14071B40F19B26F8550C4875ACA07DD95D51B38622A0B985673C78B83
D788B95727BD966006A40DF1578C54A909E23EB9025213587649F600A00D1F6B
326D331E1919A3E0EC25E84F2952241351404A54D6C4D04348A402297F939FEA
9EB9EEB2012F900ABF02638974819B9417663B266B2186FF37AE8D53C4ACA89B
0981DD16D1DAF22EA86FF53CA0DDBAF406C7C7BBAD6784363E825D74DC778858
2723B3A9C23B34A4298FE10ADF25B646D005EC31E43894B2D714F7031D5FD419
496ABA9D096BF01A50F238B345165D5712C8DFFC3280CE95BEE84C05F8D41C1D
FA2EA8547DA5457B851E08F6A69D8142C27803950781CB140889EF9F8F487435
3E7DF2462219FC1B891D47924194ADB97732C4F8CC7CC4A91E4A4378A7AF878B
3BA1F6DBCA1C5AE6A1BDC90007BD95D45E803A5B573AD227CA81DFE10BFC6826
CC7A333C393755FE195E610111E4FA85EBA1A6C72B32EE212BC161FCF5AAD0F3
F808C3DE1F5F5E41284B5AFACD7DF18E0FEBA3D95926DB6C529E34600E277F8F
BA69E67E96F534B45C98DFC51A0C8803C1F1D35FFA238C1C3D766B2DA4DE5078
3F90FB979A9EB6A7CA1DFDFD15C3C462C68ADEE64179013458CB1D02F54ACC4C
59DA0DEC977C678ED4F1B187AB8E38B046E543F058D554FC581FF876F4FF4D2A
BD085BD03815B4EBF767B2085925557595AFD874C2E9E00168AEE063E5D4651C
A0ED375554C07CBDB6F7A744E24750299F8CB9A88EE3490E137F45C94B89421D
BFB1A1F0497EAE48D85205E119C48FB10EA65FCCDCF989BC452A303763A19DB6
649ABC9BFB002F6CE740D3B2281ECE228099ADDF54A95648D86031185C5B3ABD
E9DF33F43B45ADA4E20B4D97EB9C808DC97813E63635C1E7EE645BA28928B028
CC7F03BC4B2BE9E708530998FD56F7DBE1C1A99A3C2A13A68AE5B62F7074356E
7F6DA13D142352001AB1DC0B73F3F7FB8D4FC9F7540D861B1281DB6104B27F27
5B6D12E85E3FF48560439D08CDFFED022DB1775EF719A3EA20F728AAEF7E3CC0
C0CBEB57DB9353727FC1AC27B80874E64A3D9E67ACF54A3DDA6C0687A29968FE
BDE8439DE10D8DC83BB0ABE819D8FFF5ED179456046A8BC95A3B2C6D2FA61C89
C976C3F02FCCF9A9F367B2C520CFB09A969487DA6A60C3B06BA9DF719992F6DF
AC65F6AF6248BB7FAEAB69AB45F47DAAF7F14E23885411818D049D265301577C
7389170657613E3E6A28508AF9E39732BF286A5A2E27583C155FD61631477CB6
9B045CAAA00BF98425B8790B7AF0E41F1740F3E93EAF726698401434A48F9C3C
1263E1A0D7513A57D488B1EC14F4602AAE227321276E6F6E99B33B723A609A09
F2CE89463363B3FE12850DB48333AC8813F7B626AB073B1B8C130DE8CED98566
5BECB09D808354B876D95266B4A2F01749E75EBA78F32C44B25AB207AA4C5D16
53FD3129B9765336489F496C3BFC224982B2628BB1AFE74B5D6F7F5B539E7680
B3398C0A4A2BA3EA96066C2B19E2B8A3FA0FCFAB9BFC2F5725CE959DDB2B14CB
FB826FE9CF5711307D395C38F7D6483C0E377B0931873962B7C0FCE736AE66EA
5562D174E0987C0874A00F6D1B845AF5B1EF0B4385772AC2D3239D02BDF20171
D6AEE27E3E2A05F73CA57B7389CE43823BB97F63DDAF6161CD35AEFE283BB8A9
9521273701A287FF9BFCB0552DF462A0657FFC87B4B9DD5CB824A012056E6A8A
13020D9A0855B67A25EE34A024935B852F69F0536F248FA1D40A07AF544709E6
16318B8C7EC20F0F38D94D36ED6D873AECE9C75B5CC5BF278C83DC2D926ED865
BEB479110ABF11831B05FD48C8A19BED623441B3174F27D338A923528F405026
C09B0595C95BF94D0564EC2D98214ED4109482E0FFE25F49C714EC00F1AF36E6
33D2F3B1AD1D58A55E03E3B4408AA9FC02BA34851D4B41E2902EF2722094DC4A
3CA29BF8DE25F02CDAA8773D999F4D61684A8263AED4BB0812795E66B3602966
18A29BA1A75395AAB8E29BAF8E2DFBAD2AD48095F29ABB2C095B3A0E7A9435DC
D9F85BE69EC7EB2938C2B308AAA36417D3E914926EF8D04C9B79A0112E6F8F26
0C3442780AF9ADEC148880FC8CA789D2A83279E4C91E8E53D9004A2F173613BA
CD0A4BDAA734DD39DB0804838FB601CAAA44A3A3D87DF723DD4D51823A48C6C0
DD08D48F41ED87F276EE6280526562AE04551FAFCC4B37D9B6ADE41A16D661BA
121B85926CE8643130DD17159972D5F9C26B044F948B0CDB74CDF35B9E50E1A4
7184884E3A82117FE260E6AE854A2398C4FA0FEA8D531C103637A3BEFB8B56D7
14CC08C37DA59ACC5DCD1897F1A5CE512B9CB1A1A244BD51301AD04C8D7541ED
D22CD7D0225B923779B2B38C7B0479712E4FABA113255E2B3341108D735EB612
9C5A9FADF46A2A81573814B37073A89DAACDA1848A5A132F274E0E85AB18FD27
F1A38919E921756E33DADB1CCE3C697B7A62728CBA83A7A819A06C080D03E02E
1F6876FA5FDF75B7F0109A84B0C74E99C718F5A16A7F8B427341C9BFED55F32E
7371A13AD4A491699B836E98C5BDC7C26BE14B6A8A314595A77B5C140919C810
0B99CA5B3804091249C61DA5D707BEBE913D8171407B7347F69A53FE3E16B131
FE9ECE9259740646F9BA0DD52C8B1A7519A0EE6CC38B9F51A1A4CB0B3C3F27DA
CD44A26CDC06667B24256C60DF7CAA403B16CBD3510757D2E279FF875D31E2E2
366CC1B852A67C54C1B44554CCDA5D61931709FA138C82247581A0C06B3E6F54
01E58CEE88C21680495D2C180776B31447A73927334EE22F2C8D3EF2C5B05A00
A8F6F6D7071092270AD661B34674DEA77D5648B3139A820EAB74CDA87B7CBD86
D6E0D9B9FC2E553C48A898668DF9F770CC697047361E6167F3C591E61FB2C44F
2E0AF91E8E74AEAB91BF3601D026C4194D9A1D67ABA8D1D6FD3B22259CA67671
0D2083D5EF8864E13E40562280D75E723C7629927F1EED2A244DB4046FE2F551
40601358A043CA940F1F4822F01660998DB5CA6E2EACE79FFB8A523843C2F21D
5912698F6CE090C6C928B4611142EFFC9450DDD28B0AD61725A2E80EEAE0ADD6
EA6B6D4F1EE3F599CB223D261E901770745889BDD3EC78BB2DC281B41861A996
B53F61B1FD562C377E48F4920FBF3E62C345F6B33B04BC6399334AA2750378A8
5A2027FD5BF0AC43E7185AA8AEAF9743753F7BC9D8ADE037B324919868D22873
EA828E70BD07BB78DE587AB902C039D5EDA0275DD4205C2EE00F3BF4955D4BC1
54DA99E8506535DF12836C9F3F25B514B765AD38888187E8FB5102343CA32D8F
89BF29C8695DDB70D61401CC9C777766A04BDEAEAABFD41FBE5B57C4B11D75F5
507233A19035FD4DBFEC709CAE41A09490C46D8F68DC82DE3247AECCCDDB67B1
8C02FAC4B4FEE5A3D7D2067E81316FDC7F8A6FCE2EF2B43A63644D8C6DB3DD65
5AF262E70318FEA30A7442BE4CD7F0689B4E4BC3AE401C3928A778345F1F1309
A1B4B1582FBEC25271CE0E693B4B460430225E911796FAA0395FA940250EC575
CD06777BB32426C2DE10116BB73113411579F497FAAC4B45472C3C7C32573000
82CB2AB6EF177C8F564062005C14CECACC9639AD979F4DED852F2F7690A41528
B3A13D0034B695085DF794528C51BC53BAE85A26080796939860252A862FB220
DE78184C0E42C3B44A99D974D18A8C807AFDB6093C51A2219A14C38EC6DB4FD0
A8CC0686A2C76552B9515C8DB8BE40DA849F74292DB2B345556245C06465DF48
B83E0E8C35C4B5E172DFB72075B67BEDF70FE317689CAB8FA641A27A7793DF42
9165F84CFEBA7E55DFF702A572F4EB366F80C80982E3906D0E5C2630ECECFF80
788F3B2FCF9F9F74334D0FE15EBC2B45A413466D334C3F037722FCD52A153414
13EA398A8126984C9002B72132935CC00350177106136B4640FEB50F5312A464
0717CE5E4A725F36E3328BA362FBC4885045810EFE0983AB93C3531BABB7C06D
FC8B423E82059672D1843D1A9B5669D54F4389A46E83C5CEA13A1B8B7F2A7D92
0DDE2C709E7708A453C211421AE68C97E169EDD99664B52AF0CFFCE3DCEDE59F
5942502F38525BF6920E056BADBF165A5DA44E0F441D07A2C629DD70423C321F
7E98A4C52B33BF15E9E5902FAB59D73F9798BAFA136D2092C7EFF085CE1CF9E7
1607ED7F03C8BFD6C247C1008CC397411C640DF6009B40D74E4E7439C422C2B6
84A2ABCE4FF95F39BA1A36EAE774D964C139D7D4DBC0DFA6CCDC60FD20272DE4
F408D99E82CC16B2DC3980D75F0733E57215376C78666D39868B76A4FE24BEF3
6C2DC7A584C0D2EC80B9F7F8EB734A41A2BE868859C8482B444A078D9894A5FA
DB471975DB48262987BEA14E21A0299E360E3D2B4B7363FAE26865430E534CFD
7F6D6D40915375A85074CC215581B0CB2FC1F7BCFF1C8F9A36F6158D43D7BF3B
C32963492FE8D6E21BB0670ED330E7FED8736FAAC0797FEFEF0A5A5996A11F84
18D3E27D14F5D3B57A247706DE3F3CE567A1764A9E1448EDFAD2F785E5E347FC
A48D4805A40220051325660D99E75DAA590CBE5FBA780E48F583198973E446F4
118216D24F2287B7FB05DC68FE6E5DEF1398568F35762E6539749454880F55EA
C6180AF26B435004BE71BF53EABF06AAB2727F8FD9AB96BD42393D0092D5CA10
401787E1DF7AE56BD46E333E8EA55B0C82EFB66D9B2013605F23306150996DF8
3061519EFE5071A2E20FAF5EE50B21D105C5034C1DF48951E9802957E1485DBD
4FC30BE1A950B854E8CF623BB28B01480C0B0C4F7A88818239CD6B048A787335
E7CC36F3BC8B68339C42F664101E13F10D2CBB524207E201250C18C4E4C39024
B90E4BA3D30D358EB2FE90436E0017B0863C7B9E8CF9C62744C71B2F73BC8B61
C1F646CBE051CCF5DFE928891D21EC08C62EB304DD20F06D70887F2638CC2B7F
1366F13A82D3F0648F26779FF103318B45EB5D4D4BD729945436AA324229995C
AA63151AB6B752B2A0262B1FAE3DD825A433FFE61617425315986D83B815B6FE
0D489C0EEACCE68AAC5000F6CDE3F029EBF517EC6E9FAD8C975F53FA0BBC17A3
EC3D22F356F384C304BF3E10FFD11071A8559C1CCD9D6089BB2D97BBD40DFA7B
CD8677EF65015035EE0E0DC97C242D132D6FCDE6C31443270A3FC9CF593B64B0
3170C0E7D4436CC873330FFE797DD8118C14999EB7812FE6C2E9205C08CA6800
0AB79CAB4E469DBBA4853947051023A63AF3EFBD370B44522F194F2A0A8B5103
9B339C15873C18DE732255D392193FE24CDFECA202EFB6A6B0C9F91D954D3875
67D01C88E12E288B6324625C319DF5C68523EAD09E5EC296EE8582570F368295
4F546055FD5B03FA0BDC4E6E1A86C583548385F5FD448E227B64868868DE7987
9BFE3A6B066F097D95D08E6A77966961B664DAD7826445B75DBCD3FBC23439AE
596F43E10E76A7D6F0ADEE25A9A52EC1AF159E523C36A495FEAF712340D1630B
477670C7DB2A9AC21D59F3F0F67C09FA48777E217A297AB46678449AD2D58E2F
DDAB9EB80DEFA2E13CAA2269D5A92395A4FB2E009890A90FB8487C30D336177B
54E53C586556DC63AB3EF918B3568A30C544DF1A278B41FB012B5F10C04A3D78
392E14AD15A15E6BB31ECF806DDF6DF5AF37B962AE2F8FCBED9EBC4D09961F61
B9F9F7534B4F675B3AC9E4A69A147F3AD15913212C9F992E968D3EAC7444B169
293495A73C9283DED728562FA7EFC56AC0E069679EE2D790A6DE961912C0650D
40E710B97CD92E728879874B1169F033B0185F6145863E9D5EC907582FD5F947
D6FE73FE04616381CF011004E68D15F21E717F2A74A0B88AF2519C317453DA9B
53DDBC9A0377A3259D0AA87D07AC7FA049F01EABD18DC210C59C9342DB1642B1
A6E372AB9BF26F749EA67FAA55CE5B4F52FCB06CCD6024D8D3C4949D4AEB2FCC
98605A5897D8E63DD9A7BB7BD8042FBBDA5B798CBC5B6E57F7B355B58A18916E
DCB2FC5EED52EBD19DC681E927D540BCC4C09B5577DC88F77217C414D1B9A735
D7C48027CB83F746B9F18ADE1E3603F8B130D5A9A480BBB007139D516CB7072B
1EED857BA3995A32CD1C1B1F2948867245C581778D49B0B054FAAC4C61BA5AE2
2452556FEE13DE98A7744BF4CD5CCB3FFA478904D024308FD14C6261FA753BBE
CC75950078E671580F00E7C0A91EC039AF38155747A648CC651E4440146C9AFA
B21AB804869F55FC51EF9FAEDDE8A25640053942796CBC2A2AAC1045194440D3
9A61953B9AEE01B6FE29C6D5B5B4444D71CEC11DE98B2A53D5F0CA54DD85B9F8
967961E6C0E60C2C7917CFA6D52671D100065B59F91C2B6AFBCFA84513863344
D024D0366D7977B42029574F2386BFDECF4CF9CE9F953E18265415B4EF8AFEDC
94259FB409FBFB6B2A1E2E2D8FA57EFBC8CA03288D8798B5ADE1CF697A058D6A
25F662463FE88EB55E15FF8E43C9C5B9D177BCCAA47A486D6F70839E09F7B621
CFC8B99593FB35E59C965CAD1176A3CB7FD95068C6DF0850682A5626EAAF6CF9
2C53237559F2B1BB04D08EA7AE9E9B132A561430B1FBDA31827810FF8F8D0E73
6818963119FF621D5BDAC763F9CF4EF1598EE356F9BAEC179BB28F1C29C383C7
051085A9CC0ACDF9F7955844A83AEBB7165FF6EDCBE2E46C2483B78BCE28FA75
E9DB2EBD7E35B318DDF7ABF74CA7644E723159ED76487BBDDF012F408E512FB6
CFDDABA2F6A5FD526032792AEB23A44F5C241B0F3BA35E03741B478D9136BF79
196F6D21330DF2AC3CFFB8DFE6E9BBBFA9EA69E987AE28F844A4248A36B5F459
48EF84D574BC95711E9F357FFA363348BF3551AFEEF5BE08BF59616DDB7A4F4E
E5805EAFB9F1104416A4C379CB70647F42D6FD45CC77CBE218DD8EB4A9527970
488DD8AE034EAC4424220817034EBD13D3EBECFDEC285D22CAF64069DA314C1C
DCC548919BB41EDD37C71E15A4ACB55DCB9123287C52E064E3C84FB2B21280FA
8F6D665E5B992AC94D386CE3E348CBBCD65D37FE13F7A024B41CD4C500D27CB5
EB670417F7366964AE10591A5EBBF7590BA8FD1D27BC7C2F54DA654281E38532
DA653D692B36A6A874A1EBA2D1284067DE01B02E7AAB42A7C0F547F8612010AC
1621E6B0C5C801F48EFCCB58637249058D8B4102490670E6747994F356DB49D2
DA021A0A41EBD0A989DDDDED896AE435551D75D436B3721C5FDA3A9F1DCC99CA
7FDDD01471D74C835D4D49493A2ABEC23A34CEDD35153E8E7077A1CD647307A5
59823E4CDCAC68BE3C28C447D35A9496C986871B8073CBC9AEB0CF7C3BFF4951
3D3CF328B95AED88532869F9FDC9043CAC07C5573BD38E0D1BC8C3DBFAF878E9
5FEC11C01CB923E9DDBA852FAECC8A40E6D88BB374C5D2202116E2441F38E66E
BEAA75F70EC9323FAFA05B1F8CCDDA80E92F8F727F7BDB65B02B7536829812BD
1DDC64F6029670CFC6A62DC3DB9E2AA5416B863633F2F48602FCCD5B7A424B4D
0A5FDB4721E2F119169394224420461FE2E0FC3B089B325F25D2310E34055DDB
27FC4455150E24F8F87A4E57063A641D601C2E5EC3D79B039AAB5D1237AD570F
5A292F67F79193B3A27D2E2C1FD35B937E995DD0A4AD92721C6BA89A94AD5F37
5180C5E5F409C38F61BF53385F1CAEC6FD8F2E44642A5270DEB3509F3C36A71D
7AEF7B716077D7F99968369E868C0D9E4E5032189C03A7F740023EFFE635AA0F
19D714C4BC114DD4B40D6C9FD5A39C5943FDAC5BC761B7FEAA43F9E3928C18CA
3B654A0C3C01C8FE95997E67344FC8F38AA0F006C60F606C040475188F13AC14
53DAB2F42FF67FF9B7B747F7DC921AAC55D875F84196C9C64DC9A70AB37AB71E
B03549962DBF2E09AC3BA12CF1BEA8D02B54F783DE2F3220DA3DCFC5F126BA82
AC84FE534E4E075E232489C7C2BE74D4A8CB1591627EBD5EE2541884CB5E8A4F
919570F28C9499525A9AABF1C5214EF46C85C803AD782D1BF3FF0FBE0049F0C8
B4BC1A10E5DA7AF2F64AEB222AA6FB09BA87292D7DD42645822076AC8B9064A4
5862BAA1AA773F403B5B9ABCE0C2B3CB2B07CF6880A2C65130240BD461E4CE40
57BFEC6C2E12FAE9BD640FB83807DC7D01DC29E3631DA4410CA5A7935C4584AE
8C96E4A3483509D68D3783A8141E30074F290498E8B8945B98CD8DE1B86DE146
4F071E2EE500CE1A2B7EEBCE0619FB90149CDE334B4B93FDB8AC658E8576F8CE
76941F95A50F00D4E8D42BF5DA59C943B58916E057A76D74AD1ECA5B53933A0C
E0ADBEACEE9B000CB2C55ADB8EF6777998C2C00CD5F025511622FCA56977F7B7
31E83F2F10C052D5999DCA367C03E31A4EA24F2879BB53C5AA0DC2445B876C82
4A97A0A26DF0C1976FEFF17416021DAF3502E62002A696D26CBB6811FDD96DB7
EF360C02E37B5E72B06D72D5CF9C813BAF4EEB5A21244F109F7CB0EBB698742F
642FFE39D38AA703D34D26EB3781D6AD1605E76525127B45C02355E9B247C5A0
C1A16674DFB736AE995B6EFA2ADB967D0102CAE85AE7897497211B1F83169154
12083EF8D19A2C3D091D783D599D5102B0B34257F69AB83B292D01F93CD74C73
86365CFE83D0A71FAB702D1733358C73176B950149DD04DF63C9E2B5BE049AC5
317E4572DF98EBB8F717B5DF9A4A6A9A473CC7CEE3B88F1E528ED59361A21862
C9134C52F276B3727B54AE0247466A542C6206DFC4525EDBA0B709EED9899E0B
179A18EA775CC54F80004F6942C19FA31A0078F90C144ABD2BF31B9AA0E3DCA2
64BD05EDE33775006A441C172A6622CA9D8A43657332B6557BA60908A79B5463
33E5CE1234654FBFD1BBF5DE8425F9BCBA29695BEBF5E6A7F5C71EB01302C93C
860FD6832DB799144C2CBABF80D2DCB91E9ECB410DE04CE4C2EDCDF605F9C70F
0D45E5FDD6CF6A7C42A4713E8CE21ED33D172AEE480AA009674D0003E58DC8B3
FA9E84940E0DB39CB8BF7C34B35276F6AB106548582D5FB02DD66FF8CFC07F7F
2E1AB34E6DC4FA84D9EDB8DD1235657AE86C94A937FB465CFD19555CEBFF8AFE
6AAA13C9FC7FCBEAD5B6AE802949F5FD44776CE107C7873DD234DDA45E82A4FF
C6ABBEC5103BA1A55D6E7ACC00AA033DEFC036BD5B2F145B14D15C266F215C9D
93EC3E213C6FBEE2EF11067A0342EDF06B083DB70C7D9C8A1C5889D9BF80042B
569AEE534077D023464AE0F32DA1AF4CFC32B88E2A329D80B6E6D55E46050D85
28211587E9638B578C0398B3C3A7AF8E2DFFAD92C14119CEBED265A82DCD5FB9
AA6EEEA93C193AE141B0379B997E198CC1197E25B47ED9EAD46B477D36075D8D
311DA0D3C25ED71C19CFF5882F9096316C50CA3D453D76528D9ECFF2FF23091B
A597E6E5F125AAE2D1333A9F54567E3855D5C8266B623EC018722205E0072C5D
1939E34043364088971B5893064B41FD0A5116E0EDF4F9BA6E0A3B8E3B29A4AD
94E968C5F5743499713097BC51F8AD70B02F4A1A11D1C49A93DD72F9FFBC3141
B858230000B2266389FB1B84EE1CA9BA720C29F016792A6DCA8F7949E9CD8A54
DD30C87F3C07164B66581BD5834D50083C5B5704922BEC3D6A0C34733B278DE4
91B301607F4AE60D60F946ECFB797B9B8F806BB02E8D555290ACF3DC14560601
784FECDCC0F881D104EDBC838CAC4D74F11DA9CA4B2A6617E9ED881A7D85B079
4DF01417D3BDC88D45EE8E509273C0643269989E465AB0E7E54EDAB3768509CF
20D4A4F9291A2BB417996EE5584AE35089BEF88D02B0DF2E84A640060E49774D
6202CBDE81D7D1BEF60B9978C0B218DBB58B9771FB969641A54A7DE3A6AF0FA1
F869109AF7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 33 /exclam put
dup 39 /quoteright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7582
036CB393016193A9783DD08D647E89C5BA4EFC8701BCCB6A5C027C4FA8644C06
251B9E33FFEBB1B84AC4D4B148205C8CA7AF5EF97F2788EFB0B71473AD0F5EB4
FC43F46602C53E53F5A6D1E445439F65967C51EAB636178FA377DB2DDE5FEF41
9E91F3BEBCFBD3B4EBB510A0DF7F4D19C6552BC98F10E25612B1396020D7836F
A3D3C865661DB276E428F09F048A916B4F07D8FD01AC1942A3CA342B0E531BF2
3E9A7AF265ACE1585E331A8F8B5AE06FF085C1F349215581FC7D68D16395D934
79B3BD866A4BF33913DEB54B4D00ED59E41847A2C431ED3DEFC7267AD9DE87E2
3C241539C45BAF108ED82A6998F08E027A31856F174F76A40F621E9810045F30
59DF9670E52D7342ADCF4D69DB22BED937FA03CE28ECADB6655BEF2710A5AB6A
C5CCBDA463F3F2B3D8FB57EEF087AB3230D3FBA375C8F397BED200B83A849EB4
40CC754BDAFA68CF19C49E09AB4E3AAC38B05B17B0A7C301B9A98195771F3685
C7698E22C7D4E7EB214416327A2627A5EF9661E2DA0CEE81A86FE1FF3D28D642
199FF70D5603342C2D7679F4868653AC636AC65A584CBD3C65762E66C8AC58B6
1D83AF18D1FE1D2E3CECB264438390A86B6E6A709DCE5FBB41000CE8BE18F249
22B066FCC88E543083845E70A434043BD3A59DC8DAEDE513BE38BCCCC9E62EC5
65F47FC5A19BF3675257AC32605F70150D884D307E76C150BDEBF8516DC7C550
0D1A882B31C3F60467AE1604FD41C754EA86877FA50C885DC98E4CE50918DAF3
8EF2C7A9022CAEE5840F18B31E88E90D7800BCE81D304F9896560ED8BD50E7E1
4095E55CE37E23FBE48D87C04FF8605C47C7B90C40B0C4E79437DCFE99F52319
0F13A772ABD2F1CC97A0E372A2E4FB66B94E9777701E01A968DB4249CCE6774E
D45A198D96C8EB6D6921D6BBEA0CF82E38BEFB68EF4BD1A75EBD9B2BB964D0C8
2A627B021DB1A82F0754C13E89B700D4CE11655BEF5523D6EE9BC66EF49BA3F2
E9C583DA5729C57DCF1D77ADE0A3CCE1CD0517C566E92DB0FF85D74C72452E9A
57FDB69B6C1B2706DC46F7F8D829C8452D6B462BA6E76DBAB7CEFCC2E028AD18
E3E1FB42EBCBA769135E586D85A70DDC5DDCC6A323100219DFD54B01D2ADBF11
F3D155158BAD1A2EF93A394E6E661404E092926772520E196821AA3E52C48401
FF4B67407BB06682E1C8737E35C571409DF1137C4C323A2EAF990B163D4F2C3C
C032610EA00BE0C252F0E4F49CF9AD0CF8001B828189D9FDD34FE7762E96689F
363193B9286AF93D963BF525B2EC7F322F056A8FE65EDF83E68492CB75B8A405
A2358CCBD818A8FB0D9C63290758A94B617FC121AC16F957FF7C3BD8913B0A03
4BF58A1DC585033FA025CEF94D50068860CBE16192C7933178AD389B159BDFD8
3E3B46AE355587F9E0CEF8B62A6BE00290C841D8D399880BD56D2795D6659F85
9061AD1AFE15481E3C5DC58CA1AFB539E90804B48EF7CC750E2E422655FE6645
BEE719D6E2730E9785BEC316AFC984AAB3AC9F93768C962B122C9F52D3779379
2EF2576C97C71C0C38483ACD64AFE31B9BA35D93CFFE444CC1E1800C551F0884
F380FB8939E6058B23D109D80109687DFA8510C2F4F48D651BB3FC5804B06973
1E9F78295F3C38585F9D29860836B7EA6D6F6AFC470E16551194F08524E7FB28
CA53E02C5957F329E6DCFAB5D3966D4AB1B9326515F50824BBB848A82037506A
C4944E052DDDECB1577030C7277ED91F820E25A972E4F53EFEE08D3A510AD214
6094D84A131A38B9AEC4266E252EAAE08D04AF4E65C9106B55940B143D51C1FD
E1DF14924C55057C174B6FC3EE614B0C7CFC6C0FA06F29D8F689C721B2BDF915
89B9EA6B909F1A7FB96C016522947500A29CB337412C1F718F152704BD51EEC6
5A6D61BCC97E49F1B17E66FE0813C07427264511CD102E84AAA2CFDBC14E6A43
BA4679D460745F9B20312902610B1DFE6E8307AB2DFCA7F86023C877F4A18E44
CAADD067EBA162D4C01307FD3EC836C81B4B4172181E87F8E3ED63AAAFD7D7A2
1872532EE0F108445DDD8117213538C90000D48546AF6BFE121E09360837DC41
5CD443627DD8A4653E5BA873772EC08025ED46FEDC97EDC3C0F603A3652BBC53
FCBD92E8D893A416EB3941380708A5F82D0D081E552EEC7C3362512B77541ED5
19A1439CCCE3A418D730C0261265B7D54A0B80274F78A7E3D6A5BE5500B446CC
AB495F2971858F090BA255920CB1D10B04FDF03B69018B66901C3ABE3DD7F1D2
064FC8C8E588557D7E0CE714CF615B192115AA16D973922733087E98CD09B204
746006C5CB337277511FA4BAF48D707BFAE2B1F3B42FA532E240BB172C3004A1
B02CB2396951D2A8DDCC990B63D3BAB4C823138B81D48B8F498D4600F093DF5D
30BB3C28D39744725DACFEF38D352ADB22C12C37C0193A498B662AB842035C3A
6F79365023D618A6709B65BE7403EC4FEEE2EA2F8A4CB1E94A5B51E8E24350A4
11A8848E828F2701017D263F6B52EC9E8BDEDBF860D995830C0B8E87A75CC7D2
3BF5A09023510F00B0CBF93F3FCE7729DF322E08CF10A89699D67B19867C5072
A8382017F8ADED62E04FEA657956C705B0A492002AA13ABAA2B5B7DA42F3D0B5
CD6F40E9B3437FC7403152B96C8F655EFDA74D1C99787EAA600A6F22569AF40C
326B4FBE0B38756B92774F19AFD9E26B035188802B6DC24F719861DC6608DE04
44F20BA00CC02E206BD395BA03A20F0E39331480BA41194060AE68492CDF29B6
490F8DE23CF3BCCE36D928E83258B82D39B1E8C3F394063DB2EEDBB1FF8B6D89
228672C0E44C943343CEDC27CFA1C7D8F09AAAD0A026830D6FE4729E95F64BBD
9B6456AF504274D1F51902E9101F9D08E88CCC788CA323B8C9B39B1873F29C11
811A60F52F6EA03469BCEC0A8A897CBE116BE242A0926BBEF96DB2A4E7EC5652
9B039BA426B0FD7CE7995FD52BAA930ED40F494FE70E4A36FB73E856662393C0
CB9919E05B672C8A59B834DA5B93E492BF424839E223D6A794C1825968EEC0C4
554C21DA082C4F011CA99649B0513595D536618FB9B2DE9F3B835FFA3939E7C0
3FFF691C86B77C2C249F6D5D2657FBC6EBE2A662DE75A2E8CB64D1A8D97E4751
70971A4F8C9834BCB3F8820AD451A0CF0A4B222F2E28C9499777BA279085DF00
F1A2C347197E2B6AD82041A8AA75680C6AF5F2F3F27A26AD6E382554904FF567
C0FD7D5892C97D8B2E36E5B6C58D4450C045D6F8C17CD32D8F4DFD4FBD0AD6CC
3918B39F2FB30B30AE6B9818EEF0F10A0A3B05444464D080BD3875D105C6CC21
DD9FBAF1D8CFBFFA5E95742FE84A0736D195725ECD84FDABFE3A61AC9C4F7B69
8D9798FEEFF7CF2A28177F90871C4F5A9CBCFD3BA2491429F957BBFB096A0352
15F1304C9256E1F08C6364729EEF9D93180AF50FFA71E92A58586893D6422B56
C40D8C092AD6BB9ED98197FCB4ED8F26C871FA5B574974026165806671D54A0F
552A3CEC2DA81EE3DBBD4174FD4E4D3BCEE7D04B8DD6BE26673E61D145F2B42E
F0D3C25B9E85F1E67A55F7355E0A89C66586973E64A9E06827B12C262B7A3E3C
5671A7B633A3D730A15B63F1356A6583E3861F620CB51D33DC29402EC94D049E
CD2A2FCC042987402C8EF12D64D4502EFCCCD3A3CD3B3657C304F7578179DDDF
2DF17BCC8B42214F27EDA5578339362615F4050DECBF55F59742A60B4B953FCF
D0AEE75B5648DDDDDB88F284A76594DDFCE9B1553BAA3768C358800111DEA090
DD8D34186388B3A7EF5A3557467258A39D1C0FC1F5978021A9715BFCE20852F5
D037717DC2F598B76C450945B6A0B67F74E2834D7059E0127288F5098A8C83E2
F4EC0339093E4989B9A14CDABBB033E16659939AB347F8BBFF072A5749789704
B400014373B5397D1B1EE9F8C8441B6B51FAC2D3E73E76BBDC889A6ED9DBC2F9
69A62D9057ABC5158019FB34BB1B68DC7D7F2F73361367CC6590A1C4444FA040
1C7AC4CD996823F97972EC83FCFDF6B228237D7BA590D384787541192CDB950B
871D8CAF9D3CFEDBF51163C18D58EF9D2F215CC155011B82ECBFE05684F55469
063A407B052ACD2A970C67F6F377208C27B51FE0D49DA0C3F3FFD5B130DFCB8D
2AA7CD033831EC0425B6C24D1D9A19EF1F33DD77E7E6BE3F7CC9A44FA86FF7C6
8F876CE06568FCF7E17F6D128C1C76604C380E8EF433F4B8A6F2A4B8CEA2A7F6
240F58341CD3F431A4B0EAD8FEBC7AECBFEB0BD3A69C6B64808B8205833A87CE
B7653878EEEFE036FF45209719C52B7FEA112DB2E7EE93FD9E4EEB043357E8F8
DD1F050A4095914B45E597706CEC5E0864AD3EAE6BDDD127FA4AC1BDC483A718
A234DC9449052A1FE7F1825920DD9777B68E8442409D88107D5213FA4A6AF7A3
9DF3993581B4417D5BA67A2C79ECA0E181340F9FFCA0060C03DB378E93B96D4B
E302947B45E385E95305BEE8D3CC505ABDBBCF07D15552D33740D6A8550A865E
7228FECB9E98171BB601B17599CFDA78353C59F9B6536692460CC2CED7FD37FF
C61925F4561739A3BCCD5A8E76197391AF61F3B8CE952DCFF5F7A8003DBD2825
BCFEBA63CCDEDFA87C9AFEC3FB4A28B086336DBED93FA46808DE5D882044189A
4CE1A8AF7467F9938391EF07CC6DDE5012E6B8DE506727F27F9F73625B39BB4C
7647EDAF422C91D5351F7270EC1F519449C2CA1E3B9B8FF165950B38E9AC60D7
610E96D93605CA3F15DB6775B06D8F67A394F134DB294A128EAEBD74E39DCE28
F5A47F7CCFAEBD1C0B4B24B4DC7DC86512980649FBB986D7575E5F1BABBEDFF9
D64A77A6E5E609FD3A04B18886996755F48AE88BCC0EA9CC65FCD5B7C83BCDBB
BF6AB91934F114EC2F57890BF6F4BA0793B9C69745AAC25CB6D48A56D3DCBEEE
9E465978A26AE310789AB1EDEF104E3A46CDF75EA6715760E69352B1FD333870
032B92F3DFA50491BFCB66B29A2A2041C2ADDB17CD09E6A4012A1B8BF086FA08
A83D83AD21763481A31F2BCD4AF8F60E44B246E69EFAECDE4891B8B7D3A7742B
62483CE163609CBC6C3CDEE03126260D7E4415B94D4A0DAE81F1DFA33F39864D
28A40D179973FF71D4890C15B1128673325C1463FB2CC6B7A16A4F55D9E860B3
15035D84E296F4722348DC790AAE1DE3F52D318C8572D0CC5621E0CD41471DB3
B299365EB59AF7BA008C5B104A308A8A5163B876981AF9915B69D5BE17B99A9B
F01AC84A14BC25ADB537A5280E5EEEF237C00A4E3920A32BA9337935F16083F4
18BA123E52A71CE358FE8D4B07D81113995B7DCAA4EBEB4C577763745EC9D6EE
837AD68D98C0812E71613356AB7AAEC5E3B8DFAD638582CD9DC00F215664D30A
716E3F03DBE1AFC9713AA73F18AF1B011DBEEFD462D0A06B7EDD2F1BAE3A91AF
5E21909F988E277E1B0A5D1C48CDBAA6908F8C86085542A58FEDB7D51216A33E
8367F1CB8EF90163731AD6D70131D56ED1A9088F38C2E33F45C13A1C4649C234
BF420C9EB56DE647B00D7722993D1E3D09C452A7DC309F70B40EA4E509A54F8F
FB11E095286D453BA8A57B8B6B2D45C29772D28F202FD2E8958D6C03A0EC0262
00751C03B66B3005477EA803DEEF5744C86A9048CA9B5CCCEB7460D88CE7EC37
AAEF79D077E313FFC602FF4DC7952E388BBCD3F6CF5A2AA4BB3849C16751AA27
180AC9DED040579C7308359EE23E941801912EE86FD78B976AFB16100FBDE5DF
7F6554AC9DFB4DCCC5937A9C52D38AC1556C341C0565CDC79FE1DFF1827B1069
0A2C4AF786C684A9E3531E4BAEEC1260ADF43F8F74F9D39C4264D92297CF3095
04C1C3AEE2923044275504EECE206EE3F95EBA1E61860DA01F0254B55658C46D
26E4E362E1DE3E012EF0D3D89285A626188AA6AB100FE7A11172D643D8DD60D8
020D50C3D6AF421F3E7B19EE7FFDECD1FCFE67F089D9B42E109DBD60604B83BF
C1C186992109860DE9DDDE60532A9D26A4C5473423B0644C4E64230AB34E76AE
DB803756E59815F37813E44DDA5DFAF97721584551329C9011C3E5AC746E3BF4
8DD2D2ED04A39F9C05775350B9ED1E3681A3FB647C638A159B61E9F322CEF0CD
BA4721C0A6D0E51804C0AAF6B77FAB00EABF29416D318C600BB5CDE4947B08E4
9C4677E0A7E976F4CAF2C4CEF4F47EF3A89E356753287FAA3AF736F79059137C
D338C7283F553509DFF7DE5CA102ABBD798DE849523DE67758E77998F38AB57C
0346CEDABF590D5FA985907C6609018EE620CCB306B2E8175C120FD073D41664
3035AD94DFBF6542339129878CEEA63C99A5B6FC4D85948A56286C5BC206807D
05E61C23B3182B4EE5048558B98933E039962DB17034D7A69B7C573F4AADB0BA
54C0A2F627C5CD36AB2845403A28CFCA51559855BA56F74E0389F9F5A4DD6581
CB37C2D75FB26ADC23A8D31608AF03F6BCB2756253869D8D096C33F08D29656A
B872B147099F34BFCE7C70699B31FA6F165692B9DD0BECE627E7C02F69F6726C
3CFB80978C26AFB569E8E714214E00A1C8AE59C9639B812B8855D7899B9CB904
194E0F8C102C8E84A3C7D906A675BE00ED9969C0F4F6F0ED54C797C2191C0CBD
CF7A4BD2D6A4B7B006F72971C8C241F492CB8A0D9AC75AE7E8DA0FDAB03CE491
3791C1D4168A25B9110BBF929DACAED8A53C8C7F6F81B33FF3A4FAA444CE1DFF
C7CF8A36BFEB3EAF7A2DCD3E9092D7756543E44F8B30DFCBE02631981DC7ED82
F5F5C2AC3895329A4C022A00D6CEADBF0B2FEF8C60893AC7E8C7A503AFE78D0D
9D7E86384809E0EF7988DFDA5C3563595621A9A3468E0E0CC2180DEFA0B46BA1
7C4336DE2BE0BBA475B5FB28039425D3BD115947E99DAA79C94B3D7B0FA3FAEC
D6D8FE86862EB9B3E46A76F083AE7D0FD6ACDD0C6D820C83AAFD41778858746F
3BCDABD0A7046CCDC64C79B63031BEBC5EBC0A7251B395BEC9527016A89DE489
8C238DA01340E1604F4F59E29B67378C8DE4ECF7AC7F84BDF2CD31FA679C8A54
43D2D8460256CC11A255902D217D283ADA1EC5F911001381497D5E708547C378
2157E196BAB0BE95FC3AD68A328EC0B09192E5F38913A686C8064385A99A1D02
736EF0B2233F2C2B6A50F6CB228B5990AD572CBBED6DCC1C2B4D8E5034DC3A4B
E7282E7C7D5706C7BF184386BA58430EFD0D680907D754C00CC30F303FF8D71B
ACD38DC0B8333178DDC1D41C47A5A994AE83AF8E2111C864BDA159EB05C69465
494B90DAC3B0A7CAFA3207AE0DD6C3D23A7F30766013AAF593C8F2BE431A3794
FD429B8179BA95AB90FF92AFFE37112DE77F852B101A1ED39768047F09AF83E0
D6942154C0018D5A96BB66D7C8BC7D62940D0EA767B05E7902651EF9A8477166
0FBDEB155B1CBCCAD63764A11164CFCF8FBDEF482D69882BE55CE810E7E890C0
83521AB6A4EC0EB06D73AF6101CC196FD99C716D9E519BF5536BD1F4BF5F5AAE
501DE3154A2956AB40811709BB72C345369927878C887EA318C8AF5229123F57
014540BC3C5DB32738E85A39F006C9953857F3BC7447B16A3F425CA22528B1AE
177C5FD90D24B715517623425A19D883879D1449F3EB6A74E4FEF09B9CE7E286
F1CDA855CA3F8C0560FE338A2D622E1A98F1716605F5429940B17ED384BC61DC
06B9ACF0337D2AEA257EDCDC6AFB0FBC1A547C532286C7DFA504982C9D75A07E
887560DFBF8485F01346A23DFC66F5390F8DAC88E6B60BF162D8A946B0101584
7CC5B531ADD656D1E3128746647FEDB7A85722BEBF2B812F031AA3A81F4383F6
C4AFCBE1960B6538D2EF12AA3DA9EA7E0FF9023F258E91CCFAE5613A78CA941C
5359E2C8230D76E7475D447BA05441BA86328DD708ED3909226A6D3570E63F28
3F40DD7528D0391AB74063844930373A8489639B1C286F2B02762611FC2E734C
4542B15FF69477F0CCF02DCAF57BF71A74CB81B2B4B5FA8CD6A05BD87D2CDE19
910BE535FAD5EF7CC186002F3AD4B10962355B75A748A0BFC1C407BE66CADF83
92D971C91812E140BED6FC521926457EB133CDAA07D0C28D7F3908908D9B2A7D
30720692B6A3A33A4A70151433203F6E03F107856DE2FEB1477CD8EBD5A00AFE
46642E53EF462E873B24AD8DDCA1FD51D7A51CE6B93996AC8FC89CCC060BBA46
0850A614A48FD1BCE4F3FA67A611140CFB72727ED6CBB93794D239F07677A9B1
7204153A0101C907AB795DE2215681CD7F7F9007B064567284125A72B493FA94
98DCB1436076CB1273C55D5553CAD3042879EABF985CAC3552D2F7F9F72ED304
5D3B4914446600061F8A8277DAF7C6C17D3327CFDD55C087463544F8B8F62746
0E9C03DCEF00D84A62A3282812F5F91FD9576A49D5390A5B2EBFDB3AAE12CDB7
69F16E134B7DF5DF6239769A1A1DBD4B8B010963B0F2984965F25C373335F9F6
3D821AD4717357A07C364C299F07A1752735204BEF064B1643D10BE4CE421E24
335E33F536384075B85CFEB0DF7550809FAC60B877BD80D187744B7E669A1516
F6EFF5D09DE1BE332F6BA6A2868A115050F07CC86083321E9CCB794115DD2E21
F34C6A5D125BAF7CF986BB793DC9DE652A05F1E73F63E3B5434BE81F4CB0314C
48F3BC4434464C753C5188098A896496A401A574F5A7A5444A756322772A7368
BBC3F5744C98CC3ED3D9FEA7412DD4880BB5510EC57A9F47F6D579A3F6FD932A
3EAC4029E5CD959E167B93940137796F96E026BDFE9346C8E475262D3B9BC7A4
1000C7DBB34FA7EDA27B42A21EA76DD4A07BB9BBDD2336DA234D1130163FE55E
B589F3C3CF0A7B2470677DF0ACDBE90A681BBF73FCCF208892C24673A98D4B77
663AE14B469B975D699E7D368C65D11BC4BFB7EBA5EA143AEC8CD6EA417C47E6
2979A0407848134E6520782B1F89346B5AE9C558F00925882A13A967140435DA
BECC8C182DC5BD2BD0C92459BCAA303A16BD3558DF419921ADC317D1FADB1F49
20739002FA56A5B2AD6271C0FFF699FB229E6F3E1B68EA68B0915C1D9D1686A0
EA0106440721DC63719DC982B6A3A4842B6AD520D136C77F1A33CA86B582B6B4
F0721A87FC13617BE2E7E5189779FF9402C9FC3A307E00BA8BA389B1AFCE197A
95187A1B6895E2529398A4DC047D7676385958A71D0B2EA804CF7FC34C3CAF82
80CA1AF7809E746E742ECE3B4FA7A77B9B7C22D0DF19D5E9A42FA5D9889C2D4E
031B7EC9CBC7597B31CA707489573BBD5259E3571EFEAED75505E8DED797D8E8
39DBE6F1AA9CBD65E74A3E3B814F284A3709AEC36B8F8E1E69B774D51C7071C1
3183761A54C73432533F36546D733687225242633B3B06CBDB0B7D9C444046D6
7C5B7EC636882253EFFFC0EB2BC5CD0D844A246F8860206A2A5E9948AC3A2F93
429F6E1EF13F326322F517354FCF87BDE32E81A70AC416F4DEB6E652638BA7BA
057A19E8C687AB108C64791ABFFC9C69362E6FF695C9647120BC3374DC0E1439
37A4E83333719DBFFDD7A3E96B67143C395FECC5FA5E115554CD95CCC099694C
C1283EA9F55E4FFBC4D78417B4BE4B5D33133EEBB2708C41AB918CD3D812BFA7
608DA4F0107137EB823F14C1F3495DF768C6A7BD59D2E09BBFBFD70B6E30700D
69A0C99D272B4E308A20617EF47FD9B35010C83007C145BC7C68DFA4D11777AD
1793740E181305D33C73319F08BFC17C26581E9F3BCC92C86C1D62995F495D15
FA58C90C3F9BF2951954F075FC40C8F26356E182EF832C8F97CEC064887B4BDD
2FA1DE8E0B439A3B5EAD962D05C67FBFF11D174F44BE796CEC935D062AE28880
82B77C93C432BEF4530B153FF9860EDE2C2E64BB92D0D977C230FDA2C7926C78
A8F8FBBC67D5896345A61CAA4A83D3A062353961D2355507B9395C5BD970B35B
B39F571552257BA8294EB36192DC3ED3B802298BFBA14E5FD6136C088ACDC3DA
CE98240429AB50B3ED9FF113AA50767EE653EC8427D62D934214BD1DBEDDF6CC
FDE19E449F6DA282D6B3B8D924C70631B2932BBC26494487398E38EA05A1CC82
BCBAE8B91DCA3267AF6FF37BAC71B2A07A4772E0FC1771AB58DE53FADF724F90
A796B15DDACBAC7F444AA25DD0FD7F2B7BF244B6E312746FA64A1364906A85BD
1F225C4153B2DB6C4285CECB01F5004F88A8CAA57DA3DD736A3D0934D8038E3F
8CB13D1BAD46FBA65D6B451A4A04A8B4716FEF26020F3FFF3F8FC818216C232F
663046B5E0DF100B66E1DD801176AB4B41EC9CB281B13282799E63B02E45DA8D
90188F09655B65480118E48B3759C5E90C13183C023DD9A6B2A73C6E0EC8883B
3B1C5A3B5A31A2D7F9731C96D70AABB43862461F32DC607C95C5C141A99A9377
E19C64B09447E4711D6325FC9AB721973908BA631820D53F8D84BB8AAE2DA585
CCF129DE2C90CC9FD3956177BFD551A4E09D2B17AD6012C0B7A05FA78958C8DE
05D245F182E04360C913606B9F79193568762038FA276A3B6A766C1E4D17179B
B9CEF3A105B00FA37CDA7EFE102BE0A6E6B8C3B93D7BAF1BDC69E178E5AA8C5E
E274F2BB67EF5E4B739CABFA11F77727BF9955E31D8024E16A25FC032E1F740F
36FBD050BE4133108C5BF0A314903E70BE7EAA8744388CB543352B3BFDC748CD
F7F8E26D214E64DA70F50C4E97B8F75FCE673D3D9252BB09748543FEC1C49017
0D40124E1082997E0D91D209B4CF8427EFCD7C0D688DDB589B920AD8FC5BCCF0
DB04A82B7E8AF063B66CDAB1682BEC970BAA6C15F6938DB3EDFB8FC906F24FA2
93057C39310FAD79016AB67440F7231346F98C0D7EDF6FA725856E79739AFC2C
6185AB8699373876D09381C3DA963F442E20C071C515B10DD0A19E7A4D8D9F6C
83BBB9CF3910DFEB086CF43691A9855C9518FC11FDBBAE7B03E3A20265F3634F
E86BC896E6CA441B9BFD12483A18EEA95429074567CC9068BAB9B5D43A7B79B9
5591021F4617E91F4ADE78FCCAEE4628AB3C9A634E7B9E5FE16B93373378E749
D6D06F1E251975275F5C9091603716A623023220FBF5A306E08A7D2813A57471
42E8326F7DA84A03A44F074D4D2ACCC76BB4CF0BD316E9DFE0467264550872B9
3CFA07F03EC28170E6C263F7F76BB59CE33479917E126ACA8F78B29CDB88D6A3
E44E77EF4E4B39990485AFCC37006BA404B938D668753F8B7AF12E6B405172A1
DE1C8F72F85054D30C67BBE5E3ACCAE70C68639C90D82C7ABFE0F6AA20BFD148
0944B4DE929C91C64D233F215BF5FB1F2EB90AF4FE78B80FF7CDA77AD958CDA9
2F7B3DE3E7338E880722A0487D46BF2D1FF374C22539D04C81F990302CDF677E
6541B6C25A7873039D618DC2E87A35D086A792704950EA998E19530803EE2147
B7ED2A14D107162D24AB531DF2F0B5D31A11C989A923E1A5859EB15DFA6FFD86
5170B085DD69F4DFE4A2AD281A1595123257BF052D2767B693E390513157978F
009F29CB1A4AC63B0B5C0EBB4F1D1D615C920A870BA20524C3AEDB52B4041EED
51E357CDBE8A2D5B91B8B184676AED41ABAD30CA9DBDCCC846986A7447EA70BD
9B00E1FCF95EAC1768956481F90287B1B91448AA817D2649CC6FE435A29183CB
DAF49368604B4662A735F551708D3C154BF6130D420BA3BC15518DD7DC46957B
0CD81682B43BD23AEBAC8C02B169B1CCDFB0A3B0CCA989C66B391CF867C9128F
E1C5434CB973C0809DF300FFA92E2C4C0187FA5CE7A5BFF633F26A7CF7F0C821
F833039DBAC5B6C47FB1A98B73C073C37D50987682F598CB248B9021FD22FEBF
7BD52875C5083BFE18D7EE793A4BA17D57E72D8A5A035B56C70B6BF9A71FC8A0
5A139AC2915C15FC1EA65F3F0B440DE4B181581B43BB545A3F4BF7CA50B8457D
BA2DFFB606F989920FB9F6DE3C157BBCE877E9C97949B8B02F70073FC3E00880
23C563769FD6265EBCCD6CEA01A32F3A86774E5A2116AE346529B7F26CFBCC6E
041EC19CD4F76787B1F1962CCA72196C9EC085A24A7C6F729BC52174F54B9040
537738C646261C09CD542BF8EC56CFB22F7D15A9CBE297203ACC7D3CFE4EE185
448C7C73298C6D5B865121972CBDF9CE6E00B61F169302D9A9C78611283429DA
69510661A5E249708475B63C79503E022B8F1F5207DA8618999578A2BAE8FD18
E1478E7337B6A682F5239224E343B8903D73F53F3D836D1A0FAEDD93A890F7D5
36AF81A1514A160716213CF83BA14B17464D537434490A722215948C7E17E776
B754ACB758310291B816B99F7E6D2206300E87D18F63501872491D13A4405574
2D499BA9AD93585928DB7CF6C213B40EFEACDFB987EB91B2786574832C7A290A
71D35859C4F5EDC23B975155148BCA432F912F5919E0CE76A92A8177A9AFDDE7
35F26B2F12CFF953A016329B50F14B8CA6A397005B0B16228B9095DDB442F87B
260DFA66F9B3BE7306D5B2042FACAEDBD49F514A3EDA11957F1BEB2C9F5782BD
B535D28585B6A681240AD08F94A91A14E13F4AFCBEA891BA0019931178953156
316F8966AEE42CF460BC4E9D0DB62ADE3B66A32A96307449FF7BE8ED70D02444
34F0805BD6610BDE6684800FB619576CCDA2181933F012479749C09AD733225E
50E7A72E8F5BE08CDDCC79B17997935948F7C0662E6A63D84967C2BAF47BC7D7
ED831352235F9A8AF66BF1479E0ED979D254A3FC7B46272C4113753E4F9CFD20
D4D86B71F4E0CDA2254EA7685491CE7D1EF1C3213D7C1646472648C970CCA3DD
828ECCC03604FDA33CCAC1BECC611A4B7423F77E0FC2A4B550ECDD17AB462BDA
E8208861B139F425BFFB242DEDC83B8D2CAE74CA531F14ECFBEA4C629E1CD52E
C16CEDF57FE426017146B6656AEF0BBC5586AA5FB594A72C4657B040EDBB8DE6
4AFC01757678E93FFF44B6BB96A4D816B89DEF01F97DB9F2FEADF643547ED373
681016002DDC0427430FE39CFE00A41B8A1CD7EBF9D5038D149E5B4581190711
492633F566166C3CF5825BCC08BB2D9E015C6C111F15A572A4D7677CA550F8A2
55F8CFBA7225E7746BA1211279FB0D1DB4A4C801111F594D41FB8C49A5CFBD74
DA732FFD779A7BAE4F9ED21411DE84A40DDE5F0D104958E87D23ADCB9CB9A635
F0EB5EFAA64720B136C119259AD50CBF0325D265F0C62B3AC063FC0FAE4846CE
D0A038B6D5C36474AC700698DBA10E2EAA7C5A298467B6F728E394B1FD379050
66A86FBB3753FB33B1F311AC7E416E5B8525A2DBE18EBDA7D724C1DF03A7BC03
B843C015A58E6AD0869B5276744B8A8EFB06EBA9EF84F6051C496CE82C6329A5
79848AB6820855F6E67F016CA9820B6F7EB90776969CD0B5957F1338488409C4
9E792EE98D59F2515C0D0A6938A3EE9699B950D435DADAABBE86BA292E7973C9
634C8BFCAF76113CFE9001E254D518E6613595960B0D17A0BC8CE8BC89437B49
55B32F9563A011B85A221916706EAFDBD2189A26ECAAA605CC8C4DFE084C107C
1A7CEFAE63789923BE10D4D50CF7138B745B4348AEB7F4BF4769CADDEF9A19FC
C0267C259D7CE3B269CC71F77CF1629177CD997A7016073EC5EBF4556DFDCF3F
8DA971BC6CD04F53506AA5CE34976E9A13A8C47DA35ECE038F548E79FDA7060D
4E760DB1EA325DFA64DD67096CF191E9783B718AD9C778CE7A7FCCEFDF92A148
498FB0E1753F9B5E9CE3DD598717E586279BB33E6A9B2B19DF1ECD8E91D95158
FDB7FBB6D8AD95D21DDE3D145DB01D17A1AE9EA28644A2C90384F8460585FC95
88870A28D0570A2ACC073080D0BE06B36B2A2CDC2422E1285D859395C794900F
32107EC61DC12E9DD31B62D7E22CB6E3A612E611E49A93298761BA3B057A0281
B9694E5A7EA42D8BC3EB9E6900D8EB8ACB1745EE1DBD5356B691CF739D474FA1
0050578D87FFB8B0AC609DB4DF6D54B27C7AF785E9C17C60E90829C23E76C910
378D03DC4ED4A1083F923CEE772EC4D5ED0ECD9485E4FBE2E9492F684B9F22EB
D80D6C5E8B4F7C073D2057FB73D89AB327ABAE87D931327137F0752BFDA518B1
8468F442B12F8337F69643B60DE396C84FF6FAD675B05AF8F091E5C1C15DE869
09924E072C7938DC33703FD03361EF056B5D155D0A1342BFC7C64FED899F3349
68099DDE24F28C1C56A4680325C014615133137DB20A904D171CD9170B81F0CC
962C2E6BE70F631A1EFC2D8EF052A27B7218C16BAB5048C918E5DE7A918B7690
0D033A5508770532895BD8DC0E1A75D5823A184F5ACB1BBF75ED3F2EEA909C07
B0877E3A1CB1137DF60D4F89D16271DACC35EF6C813D1F9F92DA93E82BFDE5EE
0CF7174ED2E4CF3CD26F06D33F542F2894AFF73A2ED7F8903B2430D1C335C497
289260D48CD30DC1346F30978C9E6A3E00D817FC08E1A0C11E23911A685F4A8E
9048EBE06D332EE56896DCAAC27EE56969D90E962882558677A7DF2E4FFA50DB
6533CDB56AC34C653DBE5420B005FA6ECA84D3742CAB10476EE66B7D5F4DCFCD
9C1CCF9570D1C1ECB5B0B7238F6925F5773C17BA826039F249464885624698F9
485CFCCA463A1CD99309830914CFC553677E27F302AFE6D503BBB4EBF24005BD
E801877B7DD9DCBB809CAEE1B04E564607D1743113414F72B25232B1571579F0
3D7E5B79757B311DAF736186D55D4452344567625536EE2BA5A5A7811C24BEC9
E4EA867744E77468AA12162335FAA2E965795CD0FF0FEFB0F51EE3FEE270526E
5B3462A2D1360CF93B3EDA6995EBE841AB03F860F3BD759CF9607005E5E1663F
DE5DA5512216BC8EAD707F06FC91817115F7DE676222D18517D1D07BCCACE9FC
72697D940310B736487F9DAD5563C975C1AB4FF10209119DA1525B6059F23F32
A90D665817BC2CE105D099F21FA6FA1293F4D4E36DADBCE15C527C6595E73739
3E033BC04E926AF7892B7ACE53AE20BE4CCF69CE8AEA19782A65814F4D69D9D4
7B6EC0E706F131C63DE688D93CEFEDE82B7121E9BB9BDDDECBE270D18EBB3699
6B030FD6C047DA4261BF7C4376A136879AC5C6DE5AA6B7EFA4585B5FBB23E160
74D53C8677A092231D0C99488B84F3953A08351520948E817CB225D44906A24D
D461C16180DB04E5F490EF0D73E9A2894FA9F159D993E434370A5442B0519E58
57A5BBECE3CD09CF82446A0C801C8A0E2A1BF744CB8DD2E31DC7A1C109C9BC60
7C45A2BD9FE058549BDC29FD56DDDE8A16DDB5871F7EA4017769388226E079F9
BC4ECDEAF937C5FB5D7FB004EE66D1F560727ED8B78A4F2C4B98A41954A36F2C
9CC49E1E0EEE51183A3829D4A4450EC88D2BB7049974CA6F461852343AF002EA
8B9B698F588FDD624D176090F58CB4C3677D5F8915F73DBEB68A53E58411BA6E
3C924F5B100AEB7AB839ECC1DBE67D5CA4F2A2967C767499202D623FE370C623
C6762AFA359225076CDDE758DE6AB730353623CF50AE04DC9ABBF79C14078615
3D6411BAD3E2B9F7F786B080773D4D471B6A755C284F95A5334A1F0C9A6AF93A
B34C4B8CC95A1D3768905E2584A5B7AB8EEEDEAC586B57C1BD77B165BCFA4531
25F8B4335185F8F3A236BD16BEA70673FFD76C0E2DC5976BB51AE5C37BECC058
DC747430F38B71568B11F4735CD8EDB3F18D8A8A18E802D286CE0AEB59A63F4B
7DB52D1A05776580683D983CDA2D340336C0B1B1532580D770B619E528B46E1A
4E9B24914447EC265F06906DE2F98FF95E0345F64A976A1C3520FCCE94159B59
EB1A1513E089C80F5AD1D0ED0575084B19E21A2FCBC173E9BBD5485546A06E63
6A8F62EC666E3590C6544191C51DB3C08401F0147DDBEA7D0F48C70291194ED9
E2CF5F0843D6DDDB76A66FE18E01AF92E98A441A7CE0D52BE7E9A809705F6D10
ECEE29700B6A174DB98C9CCD1443F182FC1C33E62F729DB8398EB0EC1AFCA205
8B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 81 /Q put
dup 83 /S put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D407D
BAE644AC025A9B1EE04B9F0458912B40D72D0964034C5D6F1B058909F25BC43E
76DA0DD6A25049DFAA0539291B9B8004F29F21B2A9D8EA7F0DAD2736D76E6D32
0913DE2F73FB7A9C036EB1BA040552C3594834E58172F09150757F68EE2F6D7C
E4EF454407136C4AADD69471CE6B07099AF0E0F7240A1B663AA365FEF46FAD33
83C8AB94ECDAA43C4620075378E78D20DA1F14FF6AC2C483CDC83C4A31FBA4EA
515DB7EB2BD93F1AD2F316E1254023C346234554B4C188800B609002E9728853
9F58F15C92A6FBF7BD38A9EFB2F7C0EFA184D33784095C489A0661846AEDF395
EDA0F8E18AF377CFFEF07984A141A4B19E695AB35821CC358BA38507EB2807C6
446FF34DF4D19817F40A18F0B781488E53E551D25C7326058030E2B5AAAA26EA
62E36D03175564995F2A07393255D7C34500F000737540B21745BD882FFECB89
14A1E25B2A8B2D0C7CF0367D3FD8F5107F82F23504AF28B1088B1C69B3241A44
DCF6A57B5DB298898AEFA6FC582E9A9B3EF96AA2776E11669B81EAA99EF9150B
8D39695D096825DC8AA6F50BEA2B8B3BD53C9EDF554A3A53DBF3BBC95AA37BE3
B58A1B56EC114E67896323A364B87E73BD5D654BC8C65B809321300215973091
1378599E6FDF01179347DBC4D48AD7B6CD737015792DEA224956B6B601E79A65
15ED7BFAD3CABFFEDB99B3486DD3E5BBD09673CCF584BB7FF25E58ACDEC4569A
C4AB2290653B5B0F0A17BEFF46BE63A7C2509B7B61D2028774E16D327D5201D3
1284A9748BA4E54AAA4EFCB6A4348C84859544E5AB086F4443E5930F0452468D
026A53DA3420805F6205E0094A96A8A7DEEE96EE967B876E325980BF4235996E
A26C9761E53894AE7FF9D7F3D1433E0138E14C790019BF8D14AE2A8E2B1124F2
EF2A129D38CAF87E837FE4CB37E31FC731EEF5C12F4FA901C9D35711526096C1
802CFB914BF35145019FE7BA3BADA76565148F51A99786B34D9346282A8469A8
AEC22CC97B0BD6525A6C8F90E797A33863151C8EA8191D4B01380251F8830D75
DA0E28EC54DE05E52B5095937AC70BB3688B7588EFE26628E9DFCB0BE99322A1
BE848381C5A176D1710321706BF808FC9A2AED9CB1FE4ADF54DF49A205BCB2A8
32FB4D035921D7C52194037BABEE9146E87B0D733953F8740C5CDEC59E188EB4
73579CCE8B18BE004C0DDFF23FADF91C13AC2026E884FE73785DCDC4BAE5E13F
5EEDAD46DFFECBA03E17A0008F7DB31B0B1D28E4230FF8D2CECEB3E35A2D77D6
01A015281B875BE2010183EF449ED9EBE41764E8BE721CC6E29F36FDD58F52DB
4FA47106A2077D1233712C84BFEBFCE589A46D1D7B27A90D6A5B70AE62906FD3
972C054D98EA27A4A9B7AC40CBD51AB02DC537A82F355A95F5D1FD3131541973
EF94DA0BC752948C90E552F84152C189CE0D57CC2E0B389530540E9ABC4BF7FD
96ED2E0E752346E1E9BB84910454ACD67360C5DF69AE216CDA7C20495AD33C4F
ECC744D4D47F006B6E572F752455F3A153EE0769FCC3AE1A07D991F522C3D802
ABDCB2FC0240E44CEC25B1E7A25F069E02E8BBF74C460EF41EC4E642D8087305
789E1706A3948D8E58E58A536EAA774B7D268D1B20C0C90965F0C2315192D2B9
D1A69EF1B07BCC9C405842AC6DA2845D53C090F3116E8FDDABF2C97EC6204A20
F0A152AA9AFBECD7B6EBADE1928BD5E61263D85FD61C2A0E8E89DED0E564DCB8
813326E635A52BB7DC2E4801F75631508EA1998F10D74C35CF10386E1950A18A
13C5914A5711C0346FB092DAAA354D5E28249DA489E1EB2D91043BCAB357B9AA
F0D56234BBA68CC785C1BBF9103B51A43DB735E399841870C0BA49088BB66C09
FB0203901D13F15227BD324F1977A376BEDAC2BFAA29652C4214BBB98B8492EA
3A156ACD5E519B7FA5310BCBB7C2BD91FF5B5ABC981131F3E30FB21C75380DE1
278D82BC7D0A12BCFB68D1602895EF425C885060957ABAE0632C289868B842F6
D9EF60B02433196E613FDFF736074987BC16B936CB284D313B1B30005B3D40F1
ECAE486314D11C57E77651C95BD77BD2E8F4AF91515706D41D356465D7258516
40DD1ECC88861A44989173721F44D92BBF0B6B0532F418F2C1DC3C18E527B901
B6BA407A4D0245C15C840EB89E5D886A934B4471924A35CA0358EA4C25B30FEC
BC4963749830157B15024F11BE05CA04556A366B1EB362F25AB94E1F4E968861
8ECDC02049412EC6651289646689983F7E1E7B83099FC4A26A07FA76D40C43CC
AC614E3AF8CFC2DED58E58B8F1F66D102749D145EA1F3808EE306F7AE50923CE
CDAA8627D86108917E86BF8238D196092AD6EA80208CE1B25A9D8925E7FAB70C
A82552128CF13DA3814153650B80652AA79E5B11CB8201D0170C507189E2CD65
92003A2E7BC12F7E00C4AE8C8A986525AE3EA06D328EF17572C8098986E461E6
7F209FF6D6A377BCC159A0A5AED6C64884D0D966963B6738D0E1D75246FBD1A0
4DA1B48F8AE4D4C0A9F0516525C6E93885F8A262489C89AA094AFF1873E75D0D
E51D38C5BE762D877F07FE9CAA630C75C79AE731D3502DE3F2EDCF21D4901009
DE7BA2A45E684B568E11D97CA4E03E931F755445C444322E80A8E40B69A96F6E
B80AE64F25A7D8ADE0DCD88C801F181A9B79B4C4AA1A1CEC283AB595C39AE6B3
AD2368AC9909BBF18D4451E1848A78AB818F0AA66EBD3E1A6262BF83BF6E51A0
453C75F55ED124CAA24915C2063FBEC68E476CB2551A13A53211E4040D83C185
C6D56E7D55C06C401A3FDAFE3EAA440E0E9DA4F50C9706708D210C583F27D709
10583EA057F451B622448553E9D4C760B01D6DC04AA5CACE0A682D44D41F0300
9B7963E0A14E71CEFC22CDF7A0B07D161AD2798E450FA469590F06BD911C2AA8
AD03B9872028446B6C6D05F0D4763CCBD151F76995204052C5F1E5AB6109325D
3F0A8AE1C1E81BC63441DC26D8765D231599F188715ADEA4C0E91C2DA4F2A0FC
7391C58051FB18AF332E629D1F5E102075E456EE20E7CA9D4C1E1D650368390D
EC6001A29A65216BFDFFF2229C2F93135BCAC0BCD516AA88AC36E040EA6E29B0
D8E629C2064F2E10E17C876F19FD1FF277FD09F32E02658C6D758004C26B89CA
0C5BABAF3320E5EE2A6E101456DD95E4F1FAB9EA452583F8E79701671F3D72E1
690AA5F29BD5A1B88B6FDD93FE09AE953B0176D3216C94C8FB2188C36B194FB5
ACB944420133B425D013206E898069664AD0CAE8ED3FB6D77F09DCB106E56EF2
B9F31B30594E247D2AEDBAF01645E347A7C1773225373B72911C4F8476D1F976
05EC9E99C7641EAEB845351E3943DB1B0819F59281FA4F783418B7CA8939EC12
C9F786F01438BE6927AAF50BD3DB518D017A2D6984941F7CD72AF62C8BF30DEA
AFA03CFB580B1FBD8523F8E012CA01250B834FCBBC0D4A02801C013F3BBE347A
423F12156CCA45CA490B4B6391CA778AE76230B0A2DD5C8A3D6AA91F921F57C7
A36811BAE4030863380E723780F959FEA02DE81826D1C2CC223236016941D6B1
B5FDC3777D8C62006B01ED58286D8684EEFB6CFE922447C5C731B70C83CD7CD9
F1A87AA2F52E7FC397F4CF04646EBCE2A2E9B542C6783F0C6248559AF4951FF1
449F3A6BD4E18633CC95DDB33C41286035E69D493D4C41C6BC8326AAC7BBB179
42A5CBDF438B2396986017BE631D9D543987C3EC79DD67E4540A9144758F51FB
91E6B76BC36D4ECB09AF0D8D53CFED4EB2000705A266703C5ADE4AED33B17CBD
B5DF03FD9E1EEC8AF1971B6C80D42B60F7C620779E5987C7EBBFD508F86B8289
AC4675C0E16A0D95D1A43DB5530A2D30D9CDA2D6A3E20188635C228CED2890D7
5537DBF982166BE04A099375F960BEC37ED806C348FF44DFEB9289F6AC618CB5
BF99C35EE3B6A1BACE08E78B2B9B24016BAFA3E1B8E40EF37D098E944A4A966D
7015B5BC6A1380CD4D7CE647BF2C7D49FE40FBBB849A85C6D7915EC0F279FDB5
D2305731F04CFFB3582C22DBD0BB760DAADACB079A778EB5FA6018E04EEAFAAC
F0B1A63B7293D3AB4C0938377BC0C2B90E8E19BE2D5AAA1372E9D88D22EC48E6
A2A1DBD2E0CF592AB8E2E534F0C54069782D8F6D9B04AA96DD0EB32BFE0338CF
C789E06C0B0798A3AAC5EF44FE8142F57596CB5D095F2CD7EEA7E257999DA846
D80D8A4C78E79E5A10D6B6F99AC91B287AB1D2A18F760E27EA417A40E5DF5C1A
1CBE1F8E8FE61031045C1EF81A7D1C57A89A016081D01345604D12B5ADA7FE4B
47F3A1BB913B4F725C8A4F4D7D93D70C334D84952F07FE58BAFB94FA6DFD4471
501870373654DF7DF1F66362319ACE87DCC1A0CFADBC3D7E59009FB1D4173BD8
271114D27E77CFF9693335EEA7F69C284EC7C6CF436BF2D6111CA245BA597997
4039B76153BFE014AEDFAC7AEFB26672CED7FAE9E22DE8FC3E340EFF1E318704
457D6EE20751982E6A37DDD108B4E880DA2CD6AD2A55B51B86983A724591ABC1
B08D66264469DB637486D5A46FA6615AFBD44136150CF41A34F35AA608AF8CA0
5BD24B40F09EF78C097CA6E413AE7F0F20C95EA10BA5DB64317FEAEDF6BFCAF1
E64376439D2351171C8370AFB58FA311EABDA7FF0F25D64A453C6B5672D33DF7
5C89C2DE2976C8D8A2D7F2F8114D93A2E00E3FC9BBF5ED9F04C8E6C3BFBEE5F1
A9D17CE4357DF6DC07631BC2B1C52C0D79CEE29403FC9D12754398CDF54BB3F9
C16CAFCC312264E1E663954CC9A1ADA22EC8A0DE63135E11DE59C673C1458241
C6D9B7849BB022204A71F4D7EAF87D8121CC31E7ADD348037DC7D889683FFD0D
0DC829B0F8C6E1F77E9B6E4533F45D8DC12986D7175387F31B492A24FA441A95
A412431342D4F7A0B3EFA694A9B79BCE1C6F1D3EAA68703CA9AB7FB86EC9A33F
058CDD1939642628C52440460C9225B09CA603B7D9F8844D6F49C5B9E8DB2DDD
ED4A3DDA8DBD4D53CE07DD06F35E828ABB6F049C57E97CE9477115B68CBEEE2E
1E18446EA50B10D5EF16FAA8274A4928C9B94FF83AA9633741FD5585776193BE
8AA04F961E7EF05270484F972F505B3AE9E26B5F59AAED28E7C2E1712D4514EC
D17483BCC5FE8029581E00A9A32AC8667941DD0398BDCC80B422B8B73DA55E94
768143BFC72AABCA48418A62DDC9CD50D68955BA29AFBE02342E7FA99FC05C4A
77F088200C4C3620B93FBF016BFF6D2F270129F8429AA0B5CB6BAAA481F34208
DC407F33A237DCF45624FCD024C3046855C30CEA7D312B072D82E9E43B6AC958
FA1A1D8BA17E59E1BEDF31EAFBD1B91C94A0306D1141FFA87DCB5F8113E044E1
A18A5D458741C24A7F63FAB248A5CC639BDD8B67EE3A07E87AEC7B3B8C3025E1
3C6429D1F337C285A08D419001C009B29463763D4F9F6DF62B7FBA26F808E516
9F9B86134E9E86A0E9920C3903E480DFC18CDD0D35591A5D71F7DDD91F2EDE4B
811D3C31364C6C634C718F502665B0A3DA73B0A0F0D62BD52C397655762462CF
E7104AD3BA0E928F2A2F809AF647176696B183FF59337D0B7331659D5A9EAE18
C30DAA9CAB3204B008DABC67AC8AEB20649A3CA793AEFF8629879CC681E0C945
69079C6FE03C5FA52937A80F49774CA89E8CE2FA1E9B4190CD8C642B9EE956A1
25A3DA09AB399E0F92134953D55C7EB45C4C84288A6321F2123215D3EB25293C
CB474394C8B28475B0B2FD0CB598B8493C4A25647128715135CEC3E705C60E82
98C8D41E38D521903A2F6AA0FC8945D7D17CB05B72DB8207C9152559239F8B5C
7361ED761E729236ACEF249A3F5AA0D76299B92E5EB50D81947E12B3FD0BB34C
4E967D6D32E293BEE617F05E62F7351DF7852A88B5AAB99BE85A02AE20224D0C
40A07087F159A285DF88CA17189F5EB9AE0963BB5B8D5F1BCF3E3E3D56FA5D53
3691DC703C5983495DCC604AE4A5755E8D815FBD4AD4F76740AFB3D133D743FC
883DA3D4CE3CA4CC1136B2DF873A6CDA24A6A2F496124A95D8D3CB78C1D79F2E
ACD2D5C6A62633A4E1849F21F38070FEEF9B9BEA8351F98444520ECC5E4EBC70
65BB79AAB8C424C43F2E4E2CF08292CC06279D37E3B11F663524703209020390
FDBACAA066F25603A45BC8ED4C9C2C8058693A3777D46E5E110600A0D68FB4B1
06CA01EA767687CE4B11B8BC5D1F5AAEBAA65020CE7509734650F6585A231B96
17F3765947AE28209DB48A56AEE823FF9981AC23D9D061438E7B06E01CBD542A
273299F148010CC89AD2495FF46CECAB8D89D2C4DC8E5D558C0BF2A66742155A
A26EE99C33EDDF5D6AFCC7904DF3F592D7DB91961020490A9864A28077707321
D0C5EF3921DCAAADAD26AC46FC07139DE5D892441CA065201A0C5E45B415C22E
3142B2AA635917BD6B1FFD5160D7E28E7BE7DAF0643D1D180BBE5B14E3FCD5C2
7092BE3F893C1845B4F4A89F29C61B8E5B3D0BD756E03185E93C8344DFB0A289
C66E034AA80206B1909CFD9D83019D92D44DACB6DF695DA5023072F6CACD556E
37AF91917C31AF42535F127078E025A20D6906AB259DDACA1AF4C4586F97AC6B
11C06A7FB32384043213768692DADE6DE1C5492E355BE1E36AA912064D0BD114
5A43FB7F57A3FB19E3C58D674203A1DC10C3137860D2B849ACB826FED3994D37
4EF32179DCB52B907C2C1BC49AE5D39814A60EF0E6C317711F25E4BAED47E460
2FAC7FCFC08FAD362438E387C78AAC9F2E184E1E7D1DEC3616728DEE170AA61B
F1B0623102062B5CF026562F864AAA8DFF32CC5EE51750DECC1568DCD5895BEC
3246ED859E2CBB445511A83AB2DB07F7AAE75125DFD192AEDF75B49F807DCF9D
49DB6FEA4691E32BA95802A7BD88DCDB043C4008DB46C0B6EAD2B1F3A23D96C5
24E64C45CD53CD23D23A23DC85994CE6F1FD742214870653851065366D8DBADB
CD3E99F3D5F4DAB30E9F296B9571444C97911D5D17E534A75950628BF45EFD33
025588FA6F8BD61934AFABAAF9C1553525DAF35AFFDC37A56F59C203B569439F
896CAFD5598D1EE8B8FC052D111DCA7AEA5AC0A311C9D13A1A577D2ABDE1A282
65ECC3B2D2E3F0074AD164AEC9AA8B7D0BEBB01D3FF700BC91D75F1E60BF825B
3A7881E6A388DE243586491E5D15ECEE68B713A3DA5FE364F12B08C4084AD567
08CF58385F3475140C65254712E8B2D6ACE48FB2DE1D0C524202A5DDEBE7DFBF
39AA5B5A2110BA9EE869A7A17A3ED3AB5236158E972B84FFCEC31028C4AF1C76
B55545468D67C39318B6B8E62F88E823388D89CB9F32690CF49656C135434885
E8D8B12614D49460490340855E28D7EBB5442E4082230D8299C634A248990D6A
7B509B5F3E05EDD645B1DDFCCE5B01DD9FC521748D82008B0FC74171FA0F1186
CF76DB49E8448F0088BA79ACAC0DD2A4DFC70A55DC4DC3B8421712ACDD4439AF
8B3D718D8FA44F23B8044D6C33AB05F1F77FB14D06003BE1DFDABE4B8BC6817C
62B29CB65435414D6E1B1E786283C6176FD4DD61673D4643AA06B0CA07DFF0C9
D07A3FF4353533B4653B822492CE8A44BE05879E551743CA8ECB2CC114216C06
D3CF9724F1EC95E41E907E7C1DB331E7CF00B80E9672DEF1C09D5727F8AB0BC9
72BF77056DC260A44BD4CA7B2CD886E085A88A0A691DD7EA4028EA1FE259315B
91410D32DC3AF62AD3CC5E71649318AF706B1D309042B3E6BDF6762EBA978267
DD42EB8E631766E110D86E546ABA3321613553E8DB95D28C902403A527DE1320
24A5F2792F8224E0E7C04090558FF43F1C39F4B3C6BB4B563D3B4BAA33805C99
CACBCDE81B59C6E822E2015E5D54C4D57B9F580741EF1F93B6A4B3A902B29C71
7D8BBB9FE71100954A4E001B026DB04CB5A47735953ED5821B962F5B823989BB
1A6DF366BB4D30F3782D4598079708EA3153E7ECE88E125A3D30F82CDE5861E0
AEEA8A4E154B66B50D2851CB301A651C32F49C3CAEF1F2E1D0DC0E64BC562726
4A1CB60F4FC48A346135BB26A4324B0A6A2D01C1A3C78CED3B0D5A016778A6B7
6A08DB5A9E42F4A39E8F3EAAC4231E263CD312D6C7F1B84D6BDCEB3E2E656570
7E50D7AD47C3ED3D3C5AC495CD1143AF9EC16606087D6A1CCE5F281011C2C4E7
E2FDFB8758F89BA24059E8986D8CA687775BAD67E9FB545894EB00C937F8072D
53E4FA44D81E757E6085F9B5563EF273EC33771C199E47A81742486FE7869455
8B8EE9104BA3805DD84E3B2CE1120439F7EB7A7586908DF780D0C1F1AC337E7B
C4FB6EB855D83AE28F83CF900A7824E18754BC761CB4759D6A47344A79CBC2E2
63EA3E14B01F917212BEF951B026D73A1E204BD393B58985B82572A640FCB961
EAC08290640619F2CBD606BACECCEDB683CD92ADA224027D3D1D77290FB89300
C0A011D9B4B965AFD5384354BDA298F843BA986360BFDAB7B85378EDA6C0102C
E23484CC1A5538D66DD1D67EDE05F09233897715F9B66C90103A8424DF29F649
3AA69D9393290CEF834F4006C0DA82CB8B2AE74374E92BCB9164415803B3B3D1
17ECC7977D174A82E9FE7ED7FF141787FDAA2C621B0120643FEC6EA82FBC7BE3
AAA25B25FC94366FF082D162D83D42D74C300A4553B22824B3CAD5868DB00BDA
8D7B86459A3C3CCD7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (CS444_writeup4.dvi)
@start /Fa 134[59 3[62 44 44 46 1[62 56 62 93 31 2[31
62 56 34 51 62 50 62 54 9[116 85 5[77 2[106 67 4[88 13[56
1[56 56 56 56 56 56 56 2[31 37 32[62 12[{}36 99.6264
/CMBX12 rf /Fb 134[71 1[97 71 75 52 53 55 1[75 67 75
1[37 71 1[37 1[67 1[61 1[60 11[139 102 2[75 1[101 12[103
97 96 12[67 67 67 67 67 37[78 11[{}29 119.552 /CMBX12
rf /Fc 133[37 44 44 60 44 46 32 33 33 1[46 42 46 69 23
44 25 23 46 42 25 37 46 37 46 42 3[23 1[23 1[62 1[85
62 62 60 46 2[57 65 62 76 52 2[30 1[65 54 57 63 60 1[62
5[23 23 42 42 42 42 42 42 42 42 42 42 42 23 28 23 4[23
5[23 19[46 46 48 11[{}66 83.022 /CMR10 rf /Fd 134[50
1[69 50 53 37 38 39 1[53 48 53 1[27 50 1[27 1[48 1[44
1[42 53 46 9[99 72 2[53 1[72 12[73 69 68 72 11[48 48
48 48 48 37[56 11[{}32 83.022 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 3) /Subject (CS 444 Writeup 3) /Creator (LaTeX with hyperref package) /Author (Austin Nguyen, Isaac Stallcup, Alex Garcia) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Concurrency writeup) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (Block Driver Stuff) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -4 /Dest (section.3) cvn /Title (Questions) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.1) cvn /Title (Main point of assignment) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (subsection.3.2) cvn /Title (Personal approach to problem) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.3) cvn /Title (Verification of solution) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.4) cvn /Title (What We learned) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -1 /Dest (section.4) cvn /Title (Version control log) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.1) cvn /Title (Git Logs) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -4 /Dest (section.5) cvn /Title (Work log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.5.1) cvn /Title (May 16-17) /OUT pdfmark end
 150 0 a 150
0 a
SDict begin [ /Count -0 /Dest (subsection.5.2) cvn /Title (May 17-17) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.5.3) cvn /Title (May 19-17) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.5.4) cvn /Title (May 21-17) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150
0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150
0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0 TeXcolorgray 0 TeXcolorgray
1738 1009 a Fd(W)-8 b(riteup)32 b(2)1821 1416 y Fc(CS)c(444)1735
1516 y(Spring)g(2017)1767 1852 y Fd(Abstract)194 2069
y Fc(This)f(writeup)h(is)f(the)h(writeup)g(for)f(Pro)5
b(ject)26 b(3)h(for)h(CS444)e(Op)r(erating)g(Systems)i(2.)36
b(The)28 b(write-up)f(includes)262 2169 y(the)h(Lin)n(ux)f(Y)-7
b(o)r(cto)28 b(k)n(ernal)e(on)i(os-class.engr.oregonstate.edu)22
b(blo)r(c)n(k)27 b(encryption)g(device)h(and)f(also)g(the)685
2269 y(concurrency)f(problem)h(of)h(m)n(utual)f(exlucisv)n(e)g(searc)n
(hers/inserters/deleters.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fb(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fd(1)77 b(Concurrency)33
b(writeup)1162 266 y
SDict begin 12 H.L end
 1162 266 a 1162 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1162 266 a
0 TeXcolorgray 2540 w Fd(2)p 0 TeXcolorgray 150 448 a
SDict begin H.S end

150 448 a Fd(2)77 b(Blo)s(c)m(k)31 b(Driv)m(er)i(Stu\013)1042
448 y
SDict begin 12 H.L end
 1042 448 a 1042 448 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1042 448 a 0 TeXcolorgray
2660 w Fd(2)p 0 TeXcolorgray 150 631 a
SDict begin H.S end
 150 631 a Fd(3)77
b(Questions)685 631 y
SDict begin 12 H.L end
 685 631 a 685 631 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 685 631 a 0
TeXcolorgray 3017 w Fd(2)p 0 TeXcolorgray 275 731 a
SDict begin H.S end
 275
731 a Fc(3.1)83 b(Main)28 b(p)r(oin)n(t)g(of)f(assignmen)n(t)1392
731 y
SDict begin 12 H.L end
 1392 731 a 1392 731 a
SDict begin [ /Subtype /Link /Dest (subsection.3.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1392 731 a 0 TeXcolorgray
70 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
275 830 a
SDict begin H.S end
 275 830 a Fc(3.2)83 b(P)n(ersonal)26 b(approac)n(h)f(to)j
(problem)1557 830 y
SDict begin 12 H.L end
 1557 830 a 1557 830 a
SDict begin [ /Subtype /Link /Dest (subsection.3.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1557 830 a
0 TeXcolorgray 34 w Fc(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
275 930 a
SDict begin H.S end
 275 930 a Fc(3.3)83 b(V)-7 b(eri\014cation)27
b(of)h(solution)1290 930 y
SDict begin 12 H.L end
 1290 930 a 1290 930 a
SDict begin [ /Subtype /Link /Dest (subsection.3.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1290
930 a 0 TeXcolorgray 43 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p
0 TeXcolorgray 0 TeXcolorgray 275 1029 a
SDict begin H.S end
 275 1029 a Fc(3.4)83
b(What)28 b(W)-7 b(e)28 b(learned)1105 1029 y
SDict begin 12 H.L end
 1105 1029
a 1105 1029 a
SDict begin [ /Subtype /Link /Dest (subsection.3.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1105 1029 a 0 TeXcolorgray 34 w Fc(.)42
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
150 1212 a
SDict begin H.S end
 150 1212 a Fd(4)77 b(V)-8 b(ersion)31 b(con)m(trol)h(log)
1065 1212 y
SDict begin 12 H.L end
 1065 1212 a 1065 1212 a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1065 1212 a 0 TeXcolorgray
2637 w Fd(3)p 0 TeXcolorgray 275 1312 a
SDict begin H.S end
 275 1312 a Fc(4.1)83
b(Git)29 b(Logs)783 1312 y
SDict begin 12 H.L end
 783 1312 a 783 1312 a
SDict begin [ /Subtype /Link /Dest (subsection.4.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 783
1312 a 0 TeXcolorgray 33 w Fc(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(3)p 0 TeXcolorgray 0 TeXcolorgray
150 1494 a
SDict begin H.S end
 150 1494 a Fd(5)77 b(W)-8 b(ork)32 b(log)658
1494 y
SDict begin 12 H.L end
 658 1494 a 658 1494 a
SDict begin [ /Subtype /Link /Dest (section.5) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 658 1494 a 0 TeXcolorgray
3044 w Fd(3)p 0 TeXcolorgray 275 1594 a
SDict begin H.S end
 275 1594 a Fc(5.1)83
b(Ma)n(y)27 b(16-17)848 1594 y
SDict begin 12 H.L end
 848 1594 a 848 1594 a
SDict begin [ /Subtype /Link /Dest (subsection.5.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end

848 1594 a 0 TeXcolorgray 33 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(3)p 0 TeXcolorgray 0 TeXcolorgray
275 1694 a
SDict begin H.S end
 275 1694 a Fc(5.2)83 b(Ma)n(y)27 b(17-17)848
1694 y
SDict begin 12 H.L end
 848 1694 a 848 1694 a
SDict begin [ /Subtype /Link /Dest (subsection.5.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 848 1694 a 0 TeXcolorgray
33 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(3)p 0 TeXcolorgray 0 TeXcolorgray 275 1793 a
SDict begin H.S end
 275
1793 a Fc(5.3)83 b(Ma)n(y)27 b(19-17)848 1793 y
SDict begin 12 H.L end
 848 1793
a 848 1793 a
SDict begin [ /Subtype /Link /Dest (subsection.5.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 848 1793 a 0 TeXcolorgray 33 w Fc(.)42 b(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)p 0 TeXcolorgray 157 w(3)p 0 TeXcolorgray 0 TeXcolorgray
275 1893 a
SDict begin H.S end
 275 1893 a Fc(5.4)83 b(Ma)n(y)27 b(21-17)848
1893 y
SDict begin 12 H.L end
 848 1893 a 848 1893 a
SDict begin [ /Subtype /Link /Dest (subsection.5.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 848 1893 a 0 TeXcolorgray
33 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(3)p 0 TeXcolorgray 0 TeXcolorgray 1929 5349 a(1)p
0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(1)135 b(Concurrency)44
b(writeup)150 265 y Fc(Concurrency:)37 b(the)28 b(problem)g(w)n(as)f
(implemen)n(ted)i(using)f(p)r(osix)f(threads,)h(whic)n(h)g(w)n(ere)g
(sub)r(divided)g(in)n(to)g(three)150 364 y(categories,)35
b(inserters,)h(searc)n(hers,)f(and)g(deleters.)59 b(The)35
b(problem)f(w)n(as)g(solv)n(ed)g(b)n(y)h(using)g(3)g(m)n(utex,)i(one)e
(for)150 464 y(searc)n(hers,)23 b(inserters,)i(and)g(deleters.)35
b(As)26 b(p)r(er)f(the)g(assignmen)n(t,)g(eac)n(h)f(thread)h(w)n(ould)g
(only)g(try)f(certain)h(m)n(utex.)150 564 y(F)-7 b(or)34
b(example,)h(since)g(deleters)e(can)h(not)h(run)f(in)h(parallel)e(with)
i(another)e(deleter,)j(it)f(w)n(ould)f(try)g(the)g(deleter)150
663 y(m)n(utex.)i(Another)24 b(case)f(w)n(ould)h(b)r(e)g(that)h
(inserters)e(can)g(pro)r(ceed)h(in)g(parallel)f(with)i(an)n(y)e(searc)n
(her)f(but)j(m)n(utually)150 763 y(exclusiv)n(e)i(with)i(another)e
(inserter.)38 b(Th)n(us,)28 b(inserters)f(w)n(ould)h(not)g(c)n(hec)n(k)
f(searc)n(her)g(m)n(utexes)g(but)i(w)n(ould)f(c)n(hec)n(k)150
863 y(an)f(inserter)g(m)n(utex.)150 988 y
SDict begin H.S end
 150 988 a 150
988 a
SDict begin 12 H.A end
 150 988 a 150 988 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 988 a 149 x Fb(2)135 b(Blo)t(c)l(k)45
b(Driv)l(er)g(Stu\013)150 1319 y Fc(A)31 b(simple)g(blo)r(c)n(k)f(driv)
n(er)f(sim)n(ulates)h(a)h(blo)r(c)n(k)f(device)g(with)h(a)g(region)e
(of)i(k)n(ernel)e(memory)-7 b(.)46 b(Essen)n(tially)29
b(a)h(v)n(ery)150 1419 y(simple)21 b(ramdisk)g(driv)n(er.)33
b(It)22 b(starts)e(b)n(y)h(making)g(the)g(disk)g(a)n(v)-5
b(ailable)20 b(to)h(the)h(system)f(and)g(setting)g(up)h(an)f(in)n
(ternal)150 1518 y(data)27 b(structure.)150 1643 y
SDict begin H.S end
 150
1643 a 150 1643 a
SDict begin 12 H.A end
 150 1643 a 150 1643 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 1643 a 150
x Fb(3)135 b(Questions)150 1898 y
SDict begin H.S end
 150 1898 a 150 1898
a
SDict begin 12 H.A end
 150 1898 a 150 1898 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 1898 a 93 x Fa(3.1)112 b(Main)39
b(p)s(oin)m(t)f(of)f(assignmen)m(t)150 2145 y Fc(The)27
b(main)g(p)r(oin)n(ts)f(of)h(this)g(assignmen)n(t)f(w)n(ere)g(to)g
(determine)h(ho)n(w)f(the)i(sc)n(heduler)e(w)n(ork)n(ed)f(and)h(ho)n(w)
g(there)h(are)150 2244 y(di\013eren)n(t)32 b(metho)r(ds)g(of)g(sc)n
(heduling.The)f(concurrency)g(assignmen)n(t)f(w)n(as)h(to)h(help)g(us)g
(remem)n(b)r(er)f(ho)n(w)g(to)h(use)150 2344 y(semaphores)g(that)j(w)n
(e)e(used)h(only)g(once)g(or)f(t)n(wice)h(in)g(CS344.)55
b(In)34 b(addition,)i(w)n(e)d(learned)g(ho)n(w)h(to)g(use)g(some)150
2443 y(net)n(w)n(orking)23 b(tactics)h(in)h(order)e(to)h(w)n(ork)f
(with)i(the)g(VM)g(and)f(ho)n(w)g(to)g(test)h(the)g(i/o)e(using)h(io)h
(generation)e(scripts.)150 2580 y
SDict begin H.S end
 150 2580 a 150 2580
a
SDict begin 12 H.A end
 150 2580 a 150 2580 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150 2580 a 96 x Fa(3.2)112 b(P)m(ersonal)38
b(approac)m(h)h(to)e(problem)150 2829 y Fc(The)e(approac)n(h)f(to)h
(the)g(blo)r(c)n(k)g(device)g(and)g(encryption)f(came)h(from)g
(thorough)f(researc)n(h)f(on)i(blo)r(c)n(k)g(devices)150
2929 y(and)28 b(some)f(of)h(the)g(basics)f(that)h(w)n(ere)e(co)n(v)n
(er)g(in)i(tophat)g(and)g(expanded)f(further)h(from)f(our)g(o)n(wn)g
(researc)n(h.)36 b(W)-7 b(e)150 3028 y(used)26 b(teh)h(AES)f
(encryption)g(whic)n(h)g(incorp)r(orated)f(the)i(cipher)f(in)n(to)g
(the)p 2508 3028 25 4 v 2538 3028 V 86 w(init)h(function.)37
b(W)-7 b(e)27 b(then)g(called)f(the)150 3128 y(cipher)h(to)h(encrypt)f
(or)g(decrypt)g(in)h(the)g(transfer)f(function.)150 3260
y
SDict begin H.S end
 150 3260 a 150 3260 a
SDict begin 12 H.A end
 150 3260 a 150 3260 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.3) cvn H.B /DEST pdfmark end
 150 3260
a 100 x Fa(3.3)112 b(V)-9 b(eri\014cation)38 b(of)f(solution)150
3514 y Fc(V)-7 b(eri\014cation)29 b(of)h(the)f(encryption)h(w)n(as)e
(if)i(the)g(output)g(w)n(as)f(not)g(gibb)r(erish)g(when)h(the)g
(correct)e(k)n(ey)h(w)n(as)g(giv)n(en,)150 3613 y(otherwise)h(either)h
(there)f(w)n(ould)h(b)r(e)g(gibb)r(erish)f(if)h(there)g(w)n(as)f(an)g
(incorrect)g(k)n(ey)g(or)g(y)n(ou)g(w)n(ould)g(b)r(e)h(unable)g(to)150
3713 y(read)c(the)h(driv)n(e.)150 3812 y(The)34 b(imp)r(ortan)n(t)f
(parts)f(that)i(needed)g(to)f(b)r(e)h(v)n(eri\014ed)f(w)n(ere)f(when)i
(the)g(coun)n(ter)e(applied)i(and)f(whic)n(h)h(thread)150
3912 y(grabb)r(ed)24 b(con)n(trol)g(of)h(the)g(m)n(utex.)36
b(V)-7 b(eri\014caiton)25 b(of)g(the)g(solution)g(help)r(ed)g(when)h(w)
n(e)e(added)h(ID's)h(to)e(eac)n(h)h(of)g(the)150 4012
y(threads)j(using)f(pthread)h(self.)39 b(After)29 b(going)e(through)h
(the)g(output,)h(it)g(also)e(w)n(as)g(a)h(big)g(help)h(when)f(w)n(e)g
(prin)n(ted)150 4111 y(out)g(whic)n(h)f(threads)g(w)n(ere)g(blo)r(c)n
(k)n(ed.)36 b(So)27 b(w)n(e)g(could)h(ensure)f(that)h(the)g(threads)e
(w)n(ere)h(w)n(orking)f(prop)r(erly)-7 b(.)150 4311 y(The)28
b(mak)n(e\014le)f(for)g(this)g(assignmen)n(t)g(p)r(erforms)g(this)h
(automatically)e(if)i(the)g(VM)g(is)g(b)r(o)r(oted.)150
4443 y
SDict begin H.S end
 150 4443 a 150 4443 a
SDict begin 12 H.A end
 150 4443 a 150 4443 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.4) cvn H.B /DEST pdfmark end
 150
4443 a 100 x Fa(3.4)112 b(What)38 b(W)-9 b(e)37 b(learned)150
4696 y Fc(W)-7 b(e)30 b(learned)f(ab)r(out)h(using)f(m)n(ultiple)i(m)n
(utexes)e(to)h(ac)n(hiev)n(e)e(selectiv)n(e)i(exclusion,)f(b)r(oth)h
(from)g(the)g(assignmen)n(t)150 4796 y(and)24 b(the)h(tophat)g
(reading.)34 b(Using)25 b(m)n(utexes)f(again)f(help)r(ed)i(this)g(pro)r
(cess)e(to)i(remem)n(b)r(er)e(to)i(not)f(allo)n(w)g(m)n(ultiple)150
4895 y(threads)h(to)g(access)g(the)h(same)f(data.)36
b(The)25 b(assignmen)n(t)g(help)r(ed)h(remind)g(us)f(ho)n(w)g
(semaphore)f(w)n(orks)g(and)i(some)150 4995 y(of)i(the)g(in)n
(tricacies)e(of)i(i/o.)36 b(It)28 b(also)e(taugh)n(t)h(ab)r(out)h
(devices)f(and)g(driv)n(ers,)f(and)i(ho)n(w)f(a)g(blo)r(c)n(k)g(la)n(y)
n(er)f(w)n(orks.)p 0 TeXcolorgray 1929 5349 a(2)p 0 TeXcolorgray
eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(4)135 b(V)-11 b(ersion)45
b(con)l(trol)g(log)150 188 y
SDict begin H.S end
 150 188 a 150 188 a
SDict begin 12 H.A end
 150
188 a 150 188 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.1) cvn H.B /DEST pdfmark end
 150 188 a 93 x Fa(4.1)112 b(Git)37 b(Logs)150
435 y Fc(35225a9)19 b(-)j(Isaac)e(Stallcup,)k(19)d(hours)g(ago)g(:)34
b(added)22 b(demo)g(script.)35 b(If)22 b(this)g(isn't)h(go)r(o)r(d)e
(enough)h(for)f(F)-7 b(uz)23 b(literally)150 534 y(nothing)i(will)f(b)r
(e)i(c799b8c)c(-)j(Isaac)e(Stallcup,)j(20)e(hours)g(ago)f(:)35
b(\014nished)25 b(encrypted)g(blo)r(c)n(k)f(driv)n(er)g(with)h(crypto!)
150 634 y(No)n(w)k(w)n(orking)e(on)i(script)h(b)r(e7a0b)r(d)e(-)h
(Isaac)f(Stallcup,)j(24)d(hours)g(ago)g(:)41 b(added)29
b(in)h(sk)n(eleton)e(blo)r(c)n(k)h(driv)n(er)f(\014le)150
734 y(d5dc8a4)g(-)h(Isaac)f(Stallcup,)j(2)e(da)n(ys)f(ago)g(:)41
b(added)30 b(in)f(mak)n(e\014le)g(to)g(build)i(mo)r(dule)e(b84f54a)f(-)
h(Austin,)i(4)e(da)n(ys)150 833 y(ago)d(:)37 b(added)28
b(id's)g(to)f(threads)g(using)g(pthread)p 1661 833 25
4 v 30 w(self)h(47d481c)d(-)i(Austin,)i(4)e(da)n(ys)g(ago)f(:)37
b(added)28 b(thread)f(blo)r(c)n(k)n(ed)150 933 y(698164f)18
b(-)j(Isaac)f(Stallcup,)i(4)f(da)n(ys)f(ago)f(:)34 b(added)21
b(in)g(script)f(to)h(transfer)f(\015ies)h(to)g(VM;)g(usage)f(is)h
(./transfer)p 3519 933 V 28 w(\014le.sh)150 1032 y([\014le)26
b(to)g(transfer])f([lo)r(cation)h(on)g(VM])g(4f9b)r(c5d)g(-)g(Austin,)h
(5)f(da)n(ys)f(ago)f(:)37 b(optimized)26 b(12dc4f7)e(-)i(Austin,)h(5)f
(da)n(ys)150 1132 y(ago)21 b(:)35 b(new)23 b(v)n(ersion)e(uploaded)h
(68d74d4)f(-)h(Austin,)i(5)f(da)n(ys)e(ago)h(:)34 b(test)23
b(concurrency)e(probably)h(w)n(orks)f(b4050a0)150 1232
y(-)28 b(Austin,)h(5)f(da)n(ys)f(ago)g(:)38 b(W)-7 b(ork)n(ed)28
b(on)g(concurrency)e(384d1b2)g(-)i(Austin,)h(6)f(da)n(ys)f(ago)g(:)39
b(Started)28 b(assignmen)n(t3)150 1331 y(concurrency)e(09edd54)g(-)h
(Austin,)i(6)e(da)n(ys)f(ago)h(:)36 b(Created)27 b(pro)5
b(ject)27 b(3)g(folder)150 1473 y
SDict begin H.S end
 150 1473 a 150 1473
a
SDict begin 12 H.A end
 150 1473 a 150 1473 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150 1473 a 133 x Fb(5)135 b(W)-11
b(ork)44 b(log)150 1711 y
SDict begin H.S end
 150 1711 a 150 1711 a
SDict begin 12 H.A end
 150 1711
a 150 1711 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.1) cvn H.B /DEST pdfmark end
 150 1711 a 93 x Fa(5.1)112 b(Ma)m(y)38 b(16-17)150
1958 y Fc(Austin)28 b(created)f(pro)5 b(ject)27 b(3)g(folder)g
(sometime.)37 b(W)-7 b(ork)n(ed)27 b(on)g(most)g(of)h(the)g
(concurrency)150 2090 y
SDict begin H.S end
 150 2090 a 150 2090 a
SDict begin 12 H.A end
 150 2090
a 150 2090 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.2) cvn H.B /DEST pdfmark end
 150 2090 a 100 x Fa(5.2)112 b(Ma)m(y)38
b(17-17)150 2343 y Fc(Austin)28 b(\014nished)g(concurrency)e(problem)h
(with)h(new)g(sp)r(ecs)150 2476 y
SDict begin H.S end
 150 2476 a 150 2476
a
SDict begin 12 H.A end
 150 2476 a 150 2476 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.3) cvn H.B /DEST pdfmark end
 150 2476 a 100 x Fa(5.3)112 b(Ma)m(y)38
b(19-17)150 2729 y Fc(Alex)28 b(and)f(Isaac)f(w)n(ork)n(ed)g(on)i(blo)r
(c)n(k)f(device.)36 b(Isaac)27 b(w)n(ork)n(ed)f(on)h(scripts)150
2861 y
SDict begin H.S end
 150 2861 a 150 2861 a
SDict begin 12 H.A end
 150 2861 a 150 2861 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.5.4) cvn H.B /DEST pdfmark end
 150
2861 a 100 x Fa(5.4)112 b(Ma)m(y)38 b(21-17)150 3115
y Fc(Austin)28 b(did)g(\014nal)g(git)f(log)g(up)r(date)h(and)g
(writeup.)p 0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
